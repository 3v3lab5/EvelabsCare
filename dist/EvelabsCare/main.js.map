{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/activate-account/activate-account.component.css","webpack:///./src/app/activate-account/activate-account.component.html","webpack:///./src/app/activate-account/activate-account.component.ts","webpack:///./src/app/addtask-dialog/addtask-dialog.component.css","webpack:///./src/app/addtask-dialog/addtask-dialog.component.html","webpack:///./src/app/addtask-dialog/addtask-dialog.component.ts","webpack:///./src/app/admin-home/admin-home.component.css","webpack:///./src/app/admin-home/admin-home.component.html","webpack:///./src/app/admin-home/admin-home.component.ts","webpack:///./src/app/admin-mbed/admin-mbed.component.css","webpack:///./src/app/admin-mbed/admin-mbed.component.html","webpack:///./src/app/admin-mbed/admin-mbed.component.ts","webpack:///./src/app/admin-mdripo/admin-mdripo.component.css","webpack:///./src/app/admin-mdripo/admin-mdripo.component.html","webpack:///./src/app/admin-mdripo/admin-mdripo.component.ts","webpack:///./src/app/admin-mivset/admin-mivset.component.css","webpack:///./src/app/admin-mivset/admin-mivset.component.html","webpack:///./src/app/admin-mivset/admin-mivset.component.ts","webpack:///./src/app/admin-mstation/admin-mstation.component.css","webpack:///./src/app/admin-mstation/admin-mstation.component.html","webpack:///./src/app/admin-mstation/admin-mstation.component.ts","webpack:///./src/app/admin-muser/admin-muser.component.css","webpack:///./src/app/admin-muser/admin-muser.component.html","webpack:///./src/app/admin-muser/admin-muser.component.ts","webpack:///./src/app/admin.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/deletebed-dialog/deletebed-dialog.component.css","webpack:///./src/app/deletebed-dialog/deletebed-dialog.component.html","webpack:///./src/app/deletebed-dialog/deletebed-dialog.component.ts","webpack:///./src/app/deletedripo-dialog/deletedripo-dialog.component.css","webpack:///./src/app/deletedripo-dialog/deletedripo-dialog.component.html","webpack:///./src/app/deletedripo-dialog/deletedripo-dialog.component.ts","webpack:///./src/app/deleteivset-dialog/deleteivset-dialog.component.css","webpack:///./src/app/deleteivset-dialog/deleteivset-dialog.component.html","webpack:///./src/app/deleteivset-dialog/deleteivset-dialog.component.ts","webpack:///./src/app/deletestation-dialog/deletestation-dialog.component.css","webpack:///./src/app/deletestation-dialog/deletestation-dialog.component.html","webpack:///./src/app/deletestation-dialog/deletestation-dialog.component.ts","webpack:///./src/app/deleteuser-dialog/deleteuser-dialog.component.css","webpack:///./src/app/deleteuser-dialog/deleteuser-dialog.component.html","webpack:///./src/app/deleteuser-dialog/deleteuser-dialog.component.ts","webpack:///./src/app/dischargepatient-dialog/dischargepatient-dialog.component.css","webpack:///./src/app/dischargepatient-dialog/dischargepatient-dialog.component.html","webpack:///./src/app/dischargepatient-dialog/dischargepatient-dialog.component.ts","webpack:///./src/app/editbed-dialog/editbed-dialog.component.css","webpack:///./src/app/editbed-dialog/editbed-dialog.component.html","webpack:///./src/app/editbed-dialog/editbed-dialog.component.ts","webpack:///./src/app/editdripo-dialog/editdripo-dialog.component.css","webpack:///./src/app/editdripo-dialog/editdripo-dialog.component.html","webpack:///./src/app/editdripo-dialog/editdripo-dialog.component.ts","webpack:///./src/app/editivset-dialog/editivset-dialog.component.css","webpack:///./src/app/editivset-dialog/editivset-dialog.component.html","webpack:///./src/app/editivset-dialog/editivset-dialog.component.ts","webpack:///./src/app/editpatient-dialog/editpatient-dialog.component.css","webpack:///./src/app/editpatient-dialog/editpatient-dialog.component.html","webpack:///./src/app/editpatient-dialog/editpatient-dialog.component.ts","webpack:///./src/app/editstation-dialog/editstation-dialog.component.css","webpack:///./src/app/editstation-dialog/editstation-dialog.component.html","webpack:///./src/app/editstation-dialog/editstation-dialog.component.ts","webpack:///./src/app/edituser-dialog/edituser-dialog.component.css","webpack:///./src/app/edituser-dialog/edituser-dialog.component.html","webpack:///./src/app/edituser-dialog/edituser-dialog.component.ts","webpack:///./src/app/forgot-password/forgot-password.component.css","webpack:///./src/app/forgot-password/forgot-password.component.html","webpack:///./src/app/forgot-password/forgot-password.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nurse-home/nurse-home.component.css","webpack:///./src/app/nurse-home/nurse-home.component.html","webpack:///./src/app/nurse-home/nurse-home.component.ts","webpack:///./src/app/nurse-mpatient/nurse-mpatient.component.css","webpack:///./src/app/nurse-mpatient/nurse-mpatient.component.html","webpack:///./src/app/nurse-mpatient/nurse-mpatient.component.ts","webpack:///./src/app/nurse-phistory/nurse-phistory.component.css","webpack:///./src/app/nurse-phistory/nurse-phistory.component.html","webpack:///./src/app/nurse-phistory/nurse-phistory.component.ts","webpack:///./src/app/nurse.service.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/reset-password/reset-password.component.css","webpack:///./src/app/reset-password/reset-password.component.html","webpack:///./src/app/reset-password/reset-password.component.ts","webpack:///./src/app/role-guard.service.ts","webpack:///./src/app/select-station/select-station.component.css","webpack:///./src/app/select-station/select-station.component.html","webpack:///./src/app/select-station/select-station.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/app/taskactivity-dialog/taskactivity-dialog.component.css","webpack:///./src/app/taskactivity-dialog/taskactivity-dialog.component.html","webpack:///./src/app/taskactivity-dialog/taskactivity-dialog.component.ts","webpack:///./src/app/token-interceptor.service.ts","webpack:///./src/app/unauthorized/unauthorized.component.css","webpack:///./src/app/unauthorized/unauthorized.component.html","webpack:///./src/app/unauthorized/unauthorized.component.ts","webpack:///./src/app/validator.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjdGl2YXRlLWFjY291bnQvYWN0aXZhdGUtYWNjb3VudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" [ngStyle]=\\\"{background: 'url(../../assets/images/bg.jpg)'}\\\"  style=\\\"height: 100%;width: 100%\\\">\\n\\t<div fxFlex=\\\"40\\\">{{message}}</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport  { AuthService} from '../auth.service';\nimport { Router, ActivatedRoute} from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-activate-account',\n  templateUrl: './activate-account.component.html',\n  styleUrls: ['./activate-account.component.css']\n})\nexport class ActivateAccountComponent implements OnInit {\n\tmessage={};\n  constructor(private authService:AuthService,private route: ActivatedRoute,public snackbar: MatSnackBar,\n  private router: Router) { }\n\n  ngOnInit() {\n  \tlet token = this.route.snapshot.paramMap.get('token');\n  \tthis.authService.activateAccount(token)\n  \t  .subscribe(\n  \t    res => {\n  \t        if(res.success){\n\n  \t        \tthis.snackbar.open(res.message, 'close')\n  \t        \tthis.message = res.message;\n  \t        \tthis.router.navigate(['/login'])\n\n  \t        }\n  \t        else{\n  \t        \tthis.snackbar.open(res.message, 'close')\n  \t        \tthis.message = res.message;\n  \t        \tthis.router.navigate(['/login'])\n\n  \t        }\n  \t    },\n  \t    err => {\n  \t        console.log(err);\n  \t    }\n  \t)\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZHRhc2stZGlhbG9nL2FkZHRhc2stZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2 mat-dialog-title>Add task</h2>\\n<mat-dialog-content>\\n\\t\\t<form [formGroup]=\\\"addTaskForm\\\" (ngSubmit)=\\\"onSubmit(addTaskForm,formDirective)\\\"  #formDirective=\\\"ngForm\\\">\\n\\t \\t\\t<div class=\\\"form-container\\\" fxLayout=\\\"column\\\">\\n\\t \\t\\t\\t<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t \\t\\t\\t\\t\\t<mat-form-field fxFlex=\\\"100\\\">\\n\\t \\t\\t\\t\\t\\t  \\t<mat-select placeholder=\\\"Time\\\" formControlName=\\\"time\\\">\\n\\t \\t\\t\\t\\t\\t    \\t<mat-option *ngFor=\\\"let Time of Times\\\" [value]=\\\"Time.value\\\">\\n\\t \\t\\t\\t\\t\\t      \\t\\t\\t{{Time.viewValue}}\\n\\t \\t\\t\\t\\t\\t    \\t</mat-option>\\n\\t \\t\\t\\t\\t\\t  \\t</mat-select>\\n\\t \\t\\t\\t\\t\\t  \\t<mat-icon matSuffix>alarm</mat-icon>\\n\\t \\t\\t\\t\\t\\t  \\t<mat-error *ngFor=\\\"let validation of validationMessages.bedId\\\">\\n\\t \\t\\t\\t\\t\\t      \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"addTaskForm.get('time').hasError(validation.type) && (addTaskForm.get('time').dirty || addTaskForm.get('time').touched)\\\">{{validation.message}}</mat-error>\\n\\t \\t\\t\\t\\t\\t  \\t</mat-error>\\n\\t \\t\\t\\t\\t\\t</mat-form-field>\\n\\t \\t\\t\\t</div>\\n\\t \\t\\t\\t<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t \\t\\t\\t\\t<mat-form-field fxFlex=\\\"100\\\">\\n\\t \\t\\t\\t\\t\\t<mat-select placeholder=\\\"Bed\\\" formControlName=\\\"bedId\\\">\\n\\t \\t\\t\\t\\t\\t    <mat-option *ngFor=\\\"let bed of beds\\\" [value]=\\\"bed._id\\\">\\n\\t \\t\\t\\t\\t\\t      \\t\\t\\t{{bed.bedName}}\\n\\t \\t\\t\\t\\t\\t    </mat-option>\\n\\t \\t\\t\\t\\t\\t</mat-select>\\n\\t \\t\\t\\t\\t\\t<mat-icon matSuffix>hotel</mat-icon>\\n\\t \\t\\t\\t\\t\\t<mat-error *ngFor=\\\"let validation of validationMessages.bedId\\\">\\n\\t \\t\\t\\t\\t\\t    <mat-error class=\\\"error-message\\\" *ngIf=\\\"addTaskForm.get('bedId').hasError(validation.type) && (addTaskForm.get('bedId').dirty || addTaskForm.get('bedId').touched)\\\">{{validation.message}}</mat-error>\\n\\t \\t\\t\\t\\t\\t</mat-error>\\n\\t \\t\\t\\t\\t</mat-form-field>\\n\\t \\t\\t\\t</div>\\n\\t \\t\\t\\t<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t \\t\\t\\t\\t<mat-form-field fxFlex=\\\"50\\\">\\n\\t \\t\\t\\t\\t    <input matInput placeholder=\\\"Enter Medicine name\\\" type=\\\"text\\\" formControlName=\\\"medicineName\\\">\\n\\t \\t\\t\\t\\t    <mat-icon matSuffix>opacity</mat-icon>\\n\\t \\t\\t\\t\\t    <mat-error *ngFor=\\\"let validation of validationMessages.medicineName\\\">\\n\\t \\t\\t\\t\\t    \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"addTaskForm.get('medicineName').hasError(validation.type) && (addTaskForm.get('medicineName').dirty || addTaskForm.get('medicineName').touched)\\\">{{validation.message}}</mat-error>\\n\\t \\t\\t\\t\\t    </mat-error>\\n\\t \\t\\t\\t\\t </mat-form-field>\\n\\t \\t\\t\\t\\t <mat-form-field fxFlex=\\\"50\\\">\\n\\t \\t\\t\\t\\t     <input matInput placeholder=\\\"Enter medicine volume\\\" type=\\\"text\\\" formControlName=\\\"medicineVolume\\\">\\n\\t \\t\\t\\t\\t     <mat-icon matSuffix>local_drink</mat-icon>\\n\\t \\t\\t\\t\\t     <mat-error *ngFor=\\\"let validation of validationMessages.medicineVolume\\\">\\n\\t \\t\\t\\t\\t     \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"addTaskForm.get('medicineVolume').hasError(validation.type) && (addTaskForm.get('medicineVolume').dirty || addTaskForm.get('medicineVolume').touched)\\\">{{validation.message}}</mat-error>\\n\\t \\t\\t\\t\\t     </mat-error>\\n\\t \\t\\t\\t\\t  </mat-form-field>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t\\t\\t\\t \\t<mat-form-field fxFlex=\\\"50\\\">\\n\\t\\t\\t\\t \\t\\t<input matInput placeholder=\\\"Enter Time for infusion in Hrs\\\" type=\\\"text\\\" formControlName=\\\"timeForInfusion\\\">\\n\\t\\t\\t\\t \\t\\t<mat-icon matSuffix>alarm</mat-icon>\\n\\t\\t\\t\\t \\t</mat-form-field>\\n\\t\\t\\t\\t \\t<mat-form-field fxFlex=\\\"50\\\">\\n\\t\\t\\t\\t \\t\\t<input matInput placeholder=\\\"Enter medicine rate\\\" type=\\\"text\\\" formControlName=\\\"medicineRate\\\">\\n\\t\\t\\t\\t \\t\\t<mat-icon matSuffix>trending_up</mat-icon>\\n\\t\\t\\t\\t \\t\\t<mat-error *ngFor=\\\"let validation of validationMessages.medicineRate\\\">\\n\\t\\t\\t\\t \\t\\t\\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"addTaskForm.get('medicineRate').hasError(validation.type) && (addTaskForm.get('medicineRate').dirty || addTaskForm.get('medicineRate').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t \\t\\t</mat-error>\\n\\t\\t\\t\\t \\t</mat-form-field>\\n\\t\\t\\t\\t</div>\\n\\t \\t\\t</div>\\n\\t \\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" (click)=\\\"addTaskForm.reset()\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!addTaskForm.valid\\\">Submit</button>\\n\\t \\t</form>\\n</mat-dialog-content>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MatDialogRef} from \"@angular/material\";\nimport {FormControl,FormBuilder,FormGroup,Validators,FormGroupDirective} from '@angular/forms';\nimport {NurseService} from '../nurse.service';\nimport { MatSnackBar } from '@angular/material';\n\nexport interface Times {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-addtask-dialog',\n  templateUrl: './addtask-dialog.component.html',\n  styleUrls: ['./addtask-dialog.component.css']\n})\nexport class AddtaskDialogComponent implements OnInit {\n\taddTaskForm:FormGroup;\n\tbeds=[];\n\ttaskData=[];\n\tTimes: Times[] = [\n\t\t{value: '0', viewValue: '12 AM'},{value:'1', viewValue: '1 AM'},{value:'2', viewValue: '2 AM'},{value:'3', viewValue: '3 AM'},{value:'4', viewValue: '4 AM'},\n\t\t{value:'5', viewValue: '5 AM'},{value:'6', viewValue: '6 AM'},{value:'7', viewValue: '7 AM'},{value:'8', viewValue: '8 AM'},\n\t\t{value:'9', viewValue: '9 AM'},{value:'10', viewValue: '10 AM'},{value:'11', viewValue: '11 AM'},{value:'12', viewValue: '12 PM'},{value:'13', viewValue: '1 PM'},\n\t\t{value:'14', viewValue: '2 PM'},{value:'15', viewValue: '3 PM'},{value:'16', viewValue: '4 PM'},{value:'17', viewValue: '5 PM'},{value:'18', viewValue: '6 PM'}\n\t\t,{value:'19', viewValue: '7 PM'},{value:'20', viewValue: '8 PM'},{value:'21', viewValue: '9 PM'},{value:'22', viewValue: '10 PM'},{value:'23', viewValue: '11 PM'}\n\n\n\t  ];\n  \tconstructor(private fb: FormBuilder,private nurse: NurseService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<AddtaskDialogComponent>) {\n  \t\t\tthis.addTaskForm = this.fb.group({\n  \t\t\t\ttime:['',Validators.required],\n  \t\t\t\tbedId:['',Validators.required],\n  \t\t\t\tmedicineName:['',Validators.required],\n  \t\t\t\tmedicineVolume:['',Validators.required],\n  \t\t\t\tmedicineRate:['',Validators.required],\n  \t\t\t\ttimeForInfusion:['']\n  \t\t\t}) \n  \t\t\tconst toi = this.addTaskForm.get('timeForInfusion');\n  \t\t\tconst mr = this.addTaskForm.get('medicineRate');\n  \t\t\tconst mv = this.addTaskForm.get('medicineVolume');\n  \t\t\ttoi.valueChanges.subscribe(val => {\n  \t\t\t\tconst valMv = this.addTaskForm.value.medicineVolume;\n  \t\t\t    \tmr.setValue(Math.floor(valMv/val));\n  \t\t\t });\n\n        }\n    validationMessages = {\n    \t'time':[\n    \t\t{type:'required',message:'time  is required'}\n    \t],\n    \t'bedId':[\n    \t\t{type:'required',message:'Bed name is required'}\n    \t],\n    \t'medicineName':[\n    \t\t{type:'required',message:'Medicine name is required'}\n    \t],\n    \t'medicineVolume':[\n    \t\t{type:'required',message:'Medicine Volume is required'}\n    \t],\n    \t'medicineRate':[\n    \t\t{type:'required',message:'Medicine rate is required'}\n    \t],\n    }    \n  \tngOnInit() {\n  \t\t\tthis.nurse.readOccupiedBed()\n  \t\t\t.subscribe(\n  \t\t\t\tres => {\n  \t\t\t\t       if(res.success){\n  \t\t\t\t        this.beds = res.data;\n  \t\t\t\t        }\n  \t\t           else{\n  \t\t             this.snackbar.open(res.message, 'close')\n  \t\t           }\n  \t\t\t\t       },\n  \t\t\t\t   err => {\n  \t\t\t\t         console.log(err);\n  \t\t\t\t   }\n\n  \t\t\t)\n  \t}\n\n\n  \tonSubmit(formData: any, formDirective: FormGroupDirective): void {\n  \t\tthis.taskData = this.addTaskForm.value;\n  \t\tthis.nurse.createTask(this.taskData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n                  this.dialogRef.close('success');\n  \t\t            formDirective.resetForm();\n  \t\t            this.addTaskForm.reset();\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t   \n  \t}\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWhvbWUvYWRtaW4taG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  admin-home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.css']\n})\nexport class AdminHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.scrollable {\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4tbWJlZC9hZG1pbi1tYmVkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsdUJBQXVCO0NBQ3hCOztBQUVEO0VBQ0UsbUJBQW1CO0NBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4tbWJlZC9hZG1pbi1tYmVkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uc2Nyb2xsYWJsZSB7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn0iXX0= */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column-reverse wrap\\\" style=\\\"height: 100%;width: 100%; margin-top: 10px;\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t<div fxFlex=\\\"70\\\" fxFlex.xs=\\\"40\\\" class=\\\"scrollable\\\">\\n\\t\\t<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\n\\t\\t\\t<mat-card fxLayout=\\\"row\\\" *ngFor=\\\"let bed of beds |filter:term\\\">\\n\\t\\t\\t\\t<div fxFlex=\\\"50\\\" fxFlex.xs=\\\"60\\\">{{bed.bedName}}<br>{{bed.stationName}}</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"25\\\" fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" style=\\\"color: blue\\\" (click)=\\\"openEditDialog(bed)\\\" class=\\\"mat-button\\\">Edit</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: blue\\\" (click)=\\\"openEditDialog(bed)\\\" class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"25\\\" fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" style=\\\"color: red\\\" (click)=\\\"openDeleteDialog(bed)\\\" class=\\\"mat-button\\\">Remove</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: red\\\" (click)=\\\"openDeleteDialog(bed)\\\" class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>close</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div fxFlex=\\\"30\\\" fxFlex.xs=\\\"60\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n\\t\\t<div fxFlex=\\\"60\\\" fxFlex.xs=\\\"100\\\">\\n\\t\\t\\t<mat-card>\\n\\t\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t  \\t<mat-card-title>Beds</mat-card-title>\\n\\t\\t\\t\\t  \\t<mat-card-subtitle>Add Beds</mat-card-subtitle>\\n\\t\\t\\t\\t</mat-card-header>\\n\\t\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t\\t\\t<form [formGroup]=\\\"createBedForm\\\" (ngSubmit)=\\\"onSubmit(createBedForm,formDirective)\\\"  #formDirective=\\\"ngForm\\\">\\n\\t\\t\\t\\t\\t \\t\\t<div class=\\\"form-container\\\">\\n\\t\\t\\t\\t\\t \\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t \\t\\t\\t  \\t\\t<mat-select placeholder=\\\"Station\\\" formControlName=\\\"stationId\\\">\\n\\t\\t\\t\\t\\t \\t\\t\\t    \\t\\t<mat-option *ngFor=\\\"let station of stations\\\" [value]=\\\"station._id\\\">\\n\\t\\t\\t\\t\\t \\t\\t\\t      \\t\\t\\t{{station.stationName}}\\n\\t\\t\\t\\t\\t \\t\\t\\t    \\t\\t</mat-option>\\n\\t\\t\\t\\t\\t \\t\\t\\t  \\t\\t</mat-select>\\n\\t\\t\\t\\t\\t \\t\\t\\t  \\t\\t<mat-icon matSuffix>important_devices</mat-icon>\\n\\t\\t\\t\\t\\t \\t\\t\\t  \\t\\t<mat-error *ngFor=\\\"let validation of validationMessages.stationId\\\">\\n\\t\\t\\t\\t\\t \\t\\t\\t      \\t\\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createBedForm.get('stationId').hasError(validation.type) && (createBedForm.get('stationId').dirty || createBedForm.get('stationId').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t\\t \\t\\t\\t  \\t\\t</mat-error>\\n\\t\\t\\t\\t\\t \\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t \\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t \\t    \\t\\t\\t<input matInput placeholder=\\\"Enter bed name\\\" type=\\\"text\\\" formControlName=\\\"bedName\\\">\\n\\t\\t\\t\\t\\t \\t    \\t\\t<mat-icon matSuffix>hotel</mat-icon>\\n\\t\\t\\t\\t\\t \\t    \\t\\t<mat-error *ngFor=\\\"let validation of validationMessages.bedName\\\">\\n\\t\\t\\t\\t\\t \\t    \\t    \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createBedForm.get('bedName').hasError(validation.type) && (createBedForm.get('bedName').dirty || createBedForm.get('bedName').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t\\t \\t    \\t\\t</mat-error>\\n\\t\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t \\t\\t</div>\\n\\t\\t\\t\\t\\t \\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" (click)=\\\"createBedForm.reset()\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t\\t\\t\\t\\t \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!createBedForm.valid\\\">Submit</button>\\n\\t\\t\\t\\t\\t \\t</form>\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t\\t<div fxFlex=\\\"40\\\" fxFlex.xs=\\\"50\\\"  fxHide.xs=\\\"true\\\">\\n\\t\\t\\t<mat-card>\\n\\t\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t  \\t<mat-card-title>Beds</mat-card-title>\\n\\t\\t\\t\\t  \\t<mat-card-subtitle>Filters</mat-card-subtitle>\\n\\t\\t\\t\\t</mat-card-header>\\n\\t\\t\\t\\t<mat-card-content class=\\\"form-container\\\">\\n\\t\\t\\t\\t\\t<mat-form-field appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon matSuffix>search</mat-icon>\\n\\t\\t\\t\\t\\t\\t<input  matInput placeholder=\\\"search bed\\\" type=\\\"text\\\" [(ngModel)]=term>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t</mat-card>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl,FormBuilder,FormGroup,Validators,FormGroupDirective} from '@angular/forms';\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\nimport {MatDialog, MatDialogConfig} from \"@angular/material\";\nimport { EditbedDialogComponent } from '../editbed-dialog/editbed-dialog.component';\nimport { DeletebedDialogComponent } from '../deletebed-dialog/deletebed-dialog.component';\n\n\n\n@Component({\n  selector: 'app-admin-mbed',\n  templateUrl: './admin-mbed.component.html',\n  styleUrls: ['./admin-mbed.component.css']\n})\nexport class AdminMbedComponent implements OnInit {\n\tcreateBedForm:FormGroup;\n\tbedData={};\n\tstations=[];\n\tbeds=[];\n  term;\n  \tconstructor(private fb: FormBuilder,private admin: AdminService,public snackbar: MatSnackBar,private dialog: MatDialog) {\n  \t\tthis.createBedForm = this.fb.group({\n  \t\t\tstationId:['',Validators.required],\n  \t\t\tbedName:['',Validators.compose([Validators.required,Validators.pattern('^[A-Za-z0-9]+((,|-)[A-Za-z0-9]+)*[A-Za-z0-9]+$')])]\n\n  \t\t}) \n  \t }\n\n  \tngOnInit() {\n  \t\tthis.admin.readStation()\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t        \tthis.stations = res.data;\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t\tthis.admin.readBed()\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t        \tthis.beds = res.data;\n  \t\t        \t}\n              else{\n                this.snackbar.open(res.message, 'close')\n              }\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t}\n\n\n  \tonSubmit(formData: any, formDirective: FormGroupDirective): void {\n  \t\tthis.bedData = this.createBedForm.value;\n  \t\tthis.admin.createBed(this.bedData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n  \t\t            this.admin.readBed()\n  \t\t            .subscribe(\n  \t\t            \tres => {\n  \t\t                    if(res.success){\n  \t\t                    \tthis.beds = res.data;\n  \t\t                    \t}\n  \t\t                    },\n  \t\t                err => {\n  \t\t                      console.log(err);\n  \t\t                }\n\n  \t\t            )\n  \t\t            formDirective.resetForm();\n  \t\t            this.createBedForm.reset();\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t   \n  \t}\n\n  \topenEditDialog(bed) {\n  \t        const dialogConfig = new MatDialogConfig();\n  \t        dialogConfig.autoFocus = true;\n  \t        dialogConfig.height= '200px';\n  \t        dialogConfig.width='500px';\n  \t        dialogConfig.data = {\n  \t                _id: bed._id,\n  \t                bedName:bed.bedName\n  \t            };\n\n  \t        let dialogRef = this.dialog.open(EditbedDialogComponent, dialogConfig);\n  \t        dialogRef.afterClosed().subscribe(result => {\n  \t          if(result == 'success'){\n  \t          \tthis.admin.readBed()\n  \t          \t.subscribe(\n  \t          \t\tres => {\n  \t          \t        if(res.success){\n  \t          \t        \tthis.beds = res.data;\n  \t          \t        \t}\n  \t          \t        },\n  \t          \t    err => {\n  \t          \t          console.log(err);\n  \t          \t    }\n\n  \t          \t)\n  \t          }\n  \t        });\n  \t}\n\n  \topenDeleteDialog(station) {\n  \t    const dialogConfig = new MatDialogConfig();\n  \t    dialogConfig.autoFocus = true;\n  \t    dialogConfig.height= '200px';\n  \t    dialogConfig.width='400px';\n  \t    dialogConfig.data = {\n  \t        _id: station._id,\n  \t        stationName:station.stationName,\n  \t        title: 'Remove User'\n  \t    };\n  \t    let dialogRef = this.dialog.open(DeletebedDialogComponent, dialogConfig);\n  \t    dialogRef.afterClosed().subscribe(result => {\n  \t      if(result == 'success'){\n  \t      \tthis.admin.readBed()\n  \t      \t.subscribe(\n  \t      \t\tres => {\n  \t      \t        if(res.success){\n  \t      \t        \tthis.beds = res.data;\n  \t      \t        \t}\n                    else{\n                      this.beds = [];\n                    }\n  \t      \t        },\n  \t      \t    err => {\n  \t      \t          console.log(err);\n  \t      \t    }\n\n  \t      \t)\n  \t      }\n  \t    });\n  \t        \n  \t }\n\n\n\n\n  \tvalidationMessages = {\n  \t\t'stationId':[\n  \t\t\t{type:'required',message:'Station name is required'}\n  \t\t],\n  \t\t'bedName':[\n  \t\t\t{type:'required',message:'Bed name is required'},\n  \t\t\t{type:'pattern',message:'Eg: B101,B102,B103'}\n  \t\t]\n  \t}\n\n}\n","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.scrollable {\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4tbWRyaXBvL2FkbWluLW1kcmlwby5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLHVCQUF1QjtDQUN4Qjs7QUFFRDtFQUNFLG1CQUFtQjtDQUNwQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLW1kcmlwby9hZG1pbi1tZHJpcG8uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5zY3JvbGxhYmxlIHtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufSJdfQ== */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column-reverse wrap\\\" style=\\\"height: 100%;width: 100%; margin-top: 10px;\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t<div fxFlex=\\\"70\\\" fxFlex.xs=\\\"40\\\" class=\\\"scrollable\\\">\\n\\t\\t<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\n\\t\\t\\t<mat-card fxLayout=\\\"row\\\" *ngFor=\\\"let dripo of dripos |filter:term\\\">\\n\\t\\t\\t\\t<div fxFlex=\\\"50\\\" fxFlex.xs=\\\"60\\\">{{dripo.dripoId}} <br>{{dripo.stationName}}</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"25\\\" fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" style=\\\"color: blue\\\" (click)=\\\"openEditDialog(dripo)\\\" class=\\\"mat-button\\\">Edit</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: blue\\\" (click)=\\\"openEditDialog(dripo)\\\" class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"25\\\" fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" style=\\\"color: red\\\" (click)=\\\"openDeleteDialog(dripo)\\\" class=\\\"mat-button\\\">Remove</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: red\\\" (click)=\\\"openDeleteDialog(dripo)\\\" class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>close</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div fxFlex=\\\"30\\\" fxFlex.xs=\\\"60\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n\\t\\t<div fxFlex=\\\"60\\\" fxFlex.xs=\\\"100\\\">\\n\\t\\t\\t<mat-card>\\n\\t\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t  \\t<mat-card-title>Dripo</mat-card-title>\\n\\t\\t\\t\\t  \\t<mat-card-subtitle>Add Dripo</mat-card-subtitle>\\n\\t\\t\\t\\t</mat-card-header>\\n\\t\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t\\t\\t<form [formGroup]=\\\"createDripoForm\\\" (ngSubmit)=\\\"onSubmit(createDripoForm,formDirective)\\\"  #formDirective=\\\"ngForm\\\">\\n\\t\\t\\t\\t\\t \\t\\t<div class=\\\"form-container\\\">\\n\\t\\t\\t\\t\\t \\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t \\t\\t  \\t\\t<mat-select placeholder=\\\"Station\\\" formControlName=\\\"stationId\\\">\\n\\t\\t\\t\\t\\t \\t\\t    \\t\\t<mat-option *ngFor=\\\"let station of stations\\\" [value]=\\\"station._id\\\">\\n\\t\\t\\t\\t\\t \\t\\t      \\t\\t\\t{{station.stationName}}\\n\\t\\t\\t\\t\\t \\t\\t    \\t\\t</mat-option>\\n\\t\\t\\t\\t\\t \\t\\t  \\t\\t</mat-select>\\n\\t\\t\\t\\t\\t \\t\\t  \\t\\t<mat-icon matSuffix>important_devices</mat-icon>\\n\\t\\t\\t\\t\\t \\t\\t  \\t\\t<mat-error *ngFor=\\\"let validation of validationMessages.stationId\\\">\\n\\t\\t\\t\\t\\t \\t\\t      \\t\\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createDripoForm.get('stationId').hasError(validation.type) && (createDripoForm.get('stationId').dirty || createDripoForm.get('stationId').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t\\t \\t\\t  \\t\\t</mat-error>\\n\\t\\t\\t\\t\\t \\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t \\t  \\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t \\t  \\t\\t    <input matInput placeholder=\\\"Enter dripo id\\\" type=\\\"text\\\" formControlName=dripoId>\\n\\t\\t\\t\\t\\t \\t  \\t\\t    <mat-icon matSuffix>speaker_phone</mat-icon>\\n\\t\\t\\t\\t\\t \\t  \\t\\t    <mat-error *ngFor=\\\"let validation of validationMessages.dripoId\\\">\\n\\t\\t\\t\\t\\t \\t  \\t\\t    \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createDripoForm.get('dripoId').hasError(validation.type) && (createDripoForm.get('dripoId').dirty || createDripoForm.get('dripoId').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t\\t \\t  \\t\\t    </mat-error>\\n\\t\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t \\t\\t</div>\\n\\t\\t\\t\\t\\t \\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" (click)=\\\"createDripoForm.reset()\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t\\t\\t\\t\\t \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!createDripoForm.valid\\\">Submit</button>\\n\\t\\t\\t\\t\\t \\t</form>\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t\\t<div fxFlex=\\\"40\\\" fxFlex.xs=\\\"50\\\"  fxHide.xs=\\\"true\\\">\\n\\t\\t\\t<mat-card>\\n\\t\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t  \\t<mat-card-title>Dripo</mat-card-title>\\n\\t\\t\\t\\t  \\t<mat-card-subtitle>Filters</mat-card-subtitle>\\n\\t\\t\\t\\t</mat-card-header>\\n\\t\\t\\t\\t<mat-card-content class=\\\"form-container\\\">\\n\\t\\t\\t\\t\\t<mat-form-field appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon matSuffix>search</mat-icon>\\n\\t\\t\\t\\t\\t\\t<input  matInput placeholder=\\\"search station\\\" type=\\\"text\\\" [(ngModel)]=term>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t</mat-card>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl,FormBuilder,FormGroup,Validators,FormGroupDirective} from '@angular/forms';\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\nimport {MatDialog, MatDialogConfig} from \"@angular/material\";\nimport { EditdripoDialogComponent } from '../editdripo-dialog/editdripo-dialog.component';\nimport { DeletedripoDialogComponent } from '../deletedripo-dialog/deletedripo-dialog.component';\n\n\n\n@Component({\n  selector: 'app-admin-mdripo',\n  templateUrl: './admin-mdripo.component.html',\n  styleUrls: ['./admin-mdripo.component.css']\n})\nexport class AdminMdripoComponent implements OnInit {\n\tcreateDripoForm:FormGroup;\n\tdripoData={};\n\tstations=[];\n\tdripos=[];\n  term;\n  \tconstructor(private fb: FormBuilder,private admin: AdminService,public snackbar: MatSnackBar,private dialog: MatDialog) { \n  \t\tthis.createDripoForm = this.fb.group({\n  \t\t\tstationId:['',Validators.required],\n  \t\t\tdripoId:['',Validators.required]\n\n  \t\t}) \n\n  \t}\n\n  \tvalidationMessages = {\n  \t\t'stationId':[\n  \t\t\t{type:'required',message:'Station name is required'}\n  \t\t],\n  \t\t'dripoId':[\n  \t\t\t{type:'required',message:'dripo id is required'}\n  \t\t]\n  \t}\n\n  \tngOnInit() {\n  \t\tthis.admin.readDripo()\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t        \tthis.dripos = res.data;\n  \t\t        \t}\n              else{\n                this.snackbar.open(res.message, 'close')\n              }\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t\tthis.admin.readStation()\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t        \tthis.stations = res.data;\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t}\n\n  \tonSubmit(formData: any, formDirective: FormGroupDirective): void {\n  \t\tthis.dripoData = this.createDripoForm.value;\n  \t\tthis.admin.createDripo(this.dripoData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n  \t\t            this.admin.readDripo()\n  \t\t            .subscribe(\n  \t\t            \tres => {\n  \t\t                    if(res.success){\n  \t\t                    \tthis.dripos = res.data;\n  \t\t                    \t}\n  \t\t                    },\n  \t\t                err => {\n  \t\t                      console.log(err);\n  \t\t                }\n\n  \t\t            )\n  \t\t            formDirective.resetForm();\n  \t\t            this.createDripoForm.reset();\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t   \n  \t}\n\n  \topenEditDialog(dripo) {\n  \t        const dialogConfig = new MatDialogConfig();\n  \t        dialogConfig.autoFocus = true;\n  \t        dialogConfig.height= '300px';\n  \t        dialogConfig.width='500px';\n  \t        dialogConfig.data = {\n  \t                stationId: dripo.stationId,\n  \t                stationName: dripo.stationName,\n  \t                dripoId:dripo.dripoId,\n  \t                _id:dripo._id\n  \t            };\n\n  \t        let dialogRef = this.dialog.open(EditdripoDialogComponent, dialogConfig);\n  \t        dialogRef.afterClosed().subscribe(result => {\n  \t          if(result == 'success'){\n  \t          \tthis.admin.readDripo()\n  \t          \t.subscribe(\n  \t          \t\tres => {\n  \t          \t        if(res.success){\n  \t          \t        \tthis.dripos = res.data;\n  \t          \t        \t}\n  \t          \t        },\n  \t          \t    err => {\n  \t          \t          console.log(err);\n  \t          \t    }\n\n  \t          \t)\n  \t          }\n  \t        });\n  \t}\n\n  \topenDeleteDialog(dripo) {\n  \t    const dialogConfig = new MatDialogConfig();\n  \t    dialogConfig.autoFocus = true;\n  \t    dialogConfig.height= '200px';\n  \t    dialogConfig.width='400px';\n  \t    dialogConfig.data = {\n  \t       stationName: dripo.stationName,\n  \t       dripoId:dripo.dripoId,\n  \t       _id:dripo._id\n  \t    };\n  \t    let dialogRef = this.dialog.open(DeletedripoDialogComponent, dialogConfig);\n  \t    dialogRef.afterClosed().subscribe(result => {\n  \t      if(result == 'success'){\n  \t      \tthis.admin.readDripo()\n  \t      \t.subscribe(\n  \t      \t\tres => {\n  \t      \t        if(res.success){\n  \t      \t        \tthis.dripos = res.data;\n  \t      \t        \t}\n                      else{\n                        this.dripos = [];\n                      }\n  \t      \t        },\n  \t      \t    err => {\n  \t      \t          console.log(err);\n  \t      \t    }\n\n  \t      \t)\n  \t      }\n  \t    });\n  \t        \n  \t }\n\n\n}\n","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.scrollable {\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4tbWl2c2V0L2FkbWluLW1pdnNldC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLHVCQUF1QjtDQUN4Qjs7QUFFRDtFQUNFLG1CQUFtQjtDQUNwQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLW1pdnNldC9hZG1pbi1taXZzZXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5zY3JvbGxhYmxlIHtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufSJdfQ== */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column-reverse wrap\\\" style=\\\"height: 100%;width: 100%; margin-top: 10px;\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t<div fxFlex=\\\"70\\\" fxFlex.xs=\\\"40\\\" class=\\\"scrollable\\\">\\n\\t\\t<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\n\\t\\t\\t<mat-card fxLayout=\\\"row\\\" *ngFor=\\\"let ivset of ivsets |filter:term\\\">\\n\\t\\t\\t\\t<div fxFlex=\\\"50\\\" fxFlex.xs=\\\"60\\\">{{ivset.ivsetModel}} <br>{{ivset.ivsetDpf}}</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"25\\\" fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" style=\\\"color: blue\\\" (click)=\\\"openEditDialog(ivset)\\\" class=\\\"mat-button\\\">Edit</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: blue\\\" (click)=\\\"openEditDialog(ivset)\\\" class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"25\\\" fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" style=\\\"color: red\\\" (click)=\\\"openDeleteDialog(ivset)\\\" class=\\\"mat-button\\\">Remove</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: red\\\" (click)=\\\"openDeleteDialog(ivset)\\\" class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>close</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div fxFlex=\\\"30\\\" fxFlex.xs=\\\"60\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n\\t\\t<div fxFlex=\\\"60\\\" fxFlex.xs=\\\"100\\\">\\n\\t\\t\\t<mat-card>\\n\\t\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t  \\t<mat-card-title>IV-Set</mat-card-title>\\n\\t\\t\\t\\t  \\t<mat-card-subtitle>Add IV Set</mat-card-subtitle>\\n\\t\\t\\t\\t</mat-card-header>\\n\\t\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t\\t\\t<form [formGroup]=\\\"createIvsetForm\\\" (ngSubmit)=\\\"onSubmit(createIvsetForm,formDirective)\\\"  #formDirective=\\\"ngForm\\\">\\n\\t\\t\\t\\t\\t \\t\\t<div class=\\\"form-container\\\">\\n\\t\\t\\t\\t\\t \\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t \\t    \\t\\t<input matInput placeholder=\\\"Enter ivset model\\\" type=\\\"text\\\" formControlName=ivsetModel>\\n\\t\\t\\t\\t\\t \\t    \\t\\t<mat-icon matSuffix>info</mat-icon>\\n\\t\\t\\t\\t\\t \\t    \\t\\t<mat-error *ngFor=\\\"let validation of validationMessages.ivsetModel\\\">\\n\\t\\t\\t\\t\\t \\t    \\t    \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createIvsetForm.get('ivsetModel').hasError(validation.type) && (createIvsetForm.get('ivsetModel').dirty || createIvsetForm.get('ivsetModel').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t\\t \\t    \\t\\t</mat-error>\\n\\t\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t \\t  \\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t \\t  \\t\\t    <input matInput placeholder=\\\"Enter ivset drop factor\\\" type=\\\"number\\\" formControlName=ivsetDpf>\\n\\t\\t\\t\\t\\t \\t  \\t\\t    <mat-icon matSuffix>opacity</mat-icon>\\n\\t\\t\\t\\t\\t \\t  \\t\\t    <mat-error *ngFor=\\\"let validation of validationMessages.ivsetDpf\\\">\\n\\t\\t\\t\\t\\t \\t  \\t\\t    \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createIvsetForm.get('ivsetDpf').hasError(validation.type) && (createIvsetForm.get('ivsetDpf').dirty || createIvsetForm.get('ivsetDpf').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t\\t \\t  \\t\\t    </mat-error>\\n\\t\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t \\t\\t</div>\\n\\t\\t\\t\\t\\t \\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" (click)=\\\"createIvsetForm.reset()\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t\\t\\t\\t\\t \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!createIvsetForm.valid\\\">Submit</button>\\n\\t\\t\\t\\t\\t \\t</form>\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t\\t<div fxFlex=\\\"40\\\" fxFlex.xs=\\\"50\\\"  fxHide.xs=\\\"true\\\">\\n\\t\\t\\t<mat-card>\\n\\t\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t  \\t<mat-card-title>IV-Set</mat-card-title>\\n\\t\\t\\t\\t  \\t<mat-card-subtitle>Filters</mat-card-subtitle>\\n\\t\\t\\t\\t</mat-card-header>\\n\\t\\t\\t\\t<mat-card-content class=\\\"form-container\\\">\\n\\t\\t\\t\\t\\t<mat-form-field appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon matSuffix>search</mat-icon>\\n\\t\\t\\t\\t\\t\\t<input  matInput placeholder=\\\"search station\\\" type=\\\"text\\\" [(ngModel)]=term>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t</mat-card>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl,FormBuilder,FormGroup,Validators,FormGroupDirective} from '@angular/forms';\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\nimport {MatDialog, MatDialogConfig} from \"@angular/material\";\nimport { EditivsetDialogComponent } from '../editivset-dialog/editivset-dialog.component';\nimport { DeleteivsetDialogComponent } from '../deleteivset-dialog/deleteivset-dialog.component';\n\n@Component({\n  selector: 'app-admin-mivset',\n  templateUrl: './admin-mivset.component.html',\n  styleUrls: ['./admin-mivset.component.css']\n})\nexport class AdminMivsetComponent implements OnInit {\n\tcreateIvsetForm:FormGroup;\n\tivsetData={};\n\tivsets=[];\n  term;\n  \tconstructor(private fb: FormBuilder,private admin: AdminService,public snackbar: MatSnackBar,private dialog: MatDialog) {\n  \t\tthis.createIvsetForm = this.fb.group({\n  \t\t\tivsetModel:['',Validators.required],\n  \t\t\tivsetDpf:['',Validators.required]\n\n  \t\t}) \n  \t}\n  \tvalidationMessages = {\n  \t\t'ivsetModel':[\n  \t\t\t{type:'required',message:'Ivset model is required'}\n  \t\t],\n  \t\t'ivsetDpf':[\n  \t\t\t{type:'required',message:'Ivset drop factor is required'}\n  \t\t]\n  \t}\n\n  \tngOnInit() {\n  \t\tthis.admin.readIvset()\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t        \tthis.ivsets = res.data;\n  \t\t        \t}\n              else{\n                this.snackbar.open(res.message, 'close')\n              }\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t}\n\n  \tonSubmit(formData: any, formDirective: FormGroupDirective): void {\n  \t\tthis.ivsetData = this.createIvsetForm.value;\n  \t\tconsole.log(this.ivsetData);\n  \t\tthis.admin.createIvset(this.ivsetData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n  \t\t            this.admin.readIvset()\n  \t\t            .subscribe(\n  \t\t            \tres => {\n  \t\t                    if(res.success){\n  \t\t                    \tthis.ivsets = res.data;\n  \t\t                    \t}\n  \t\t                    },\n  \t\t                err => {\n  \t\t                      console.log(err);\n  \t\t                }\n\n  \t\t            )\n  \t\t            formDirective.resetForm();\n  \t\t            this.createIvsetForm.reset();\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t   \n  \t}\n\n  \topenEditDialog(ivset) {\n  \t        const dialogConfig = new MatDialogConfig();\n  \t        dialogConfig.autoFocus = true;\n  \t        dialogConfig.height= '300px';\n  \t        dialogConfig.width='500px';\n  \t        dialogConfig.data = {\n  \t                _id: ivset._id,\n  \t                ivsetModel:ivset.ivsetModel,\n  \t                ivsetDpf:ivset.ivsetDpf\n  \t            };\n\n  \t        let dialogRef = this.dialog.open(EditivsetDialogComponent, dialogConfig);\n  \t        dialogRef.afterClosed().subscribe(result => {\n  \t          if(result == 'success'){\n  \t          \tthis.admin.readIvset()\n  \t          \t.subscribe(\n  \t          \t\tres => {\n  \t          \t        if(res.success){\n  \t          \t        \tthis.ivsets = res.data;\n  \t          \t        \t}\n  \t          \t        },\n  \t          \t    err => {\n  \t          \t          console.log(err);\n  \t          \t    }\n\n  \t          \t)\n  \t          }\n  \t        });\n  \t}\n\n  \topenDeleteDialog(ivset) {\n  \t    const dialogConfig = new MatDialogConfig();\n  \t    dialogConfig.autoFocus = true;\n  \t    dialogConfig.height= '200px';\n  \t    dialogConfig.width='400px';\n  \t    dialogConfig.data = {\n  \t        _id: ivset._id,\n  \t        ivsetModel:ivset.ivsetModel,\n  \t        ivsetDpf:ivset.ivsetDpf\n  \t    };\n  \t    let dialogRef = this.dialog.open(DeleteivsetDialogComponent, dialogConfig);\n  \t    dialogRef.afterClosed().subscribe(result => {\n  \t      if(result == 'success'){\n  \t      \tthis.admin.readIvset()\n  \t      \t.subscribe(\n  \t      \t\tres => {\n  \t      \t        if(res.success){\n  \t      \t        \tthis.ivsets = res.data;\n  \t      \t        \t}\n                    else{\n                      this.ivsets = [];\n                    }\n  \t      \t        },\n  \t      \t    err => {\n  \t      \t          console.log(err);\n  \t      \t    }\n\n  \t      \t)\n  \t      }\n  \t    });\n  \t        \n  \t }\n\n\n\n\n}\n","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.scrollable {\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4tbXN0YXRpb24vYWRtaW4tbXN0YXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCx1QkFBdUI7Q0FDeEI7O0FBRUQ7RUFDRSxtQkFBbUI7Q0FDcEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi1tc3RhdGlvbi9hZG1pbi1tc3RhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnNjcm9sbGFibGUge1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59Il19 */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column-reverse wrap\\\" style=\\\"height: 100%;width: 100%; margin-top: 10px;\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t<div fxFlex=\\\"70\\\" fxFlex.xs=\\\"40\\\" class=\\\"scrollable\\\">\\n\\t\\t<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\n\\t\\t\\t<mat-card fxLayout=\\\"row\\\" *ngFor=\\\"let station of stations |filter:term\\\">\\n\\t\\t\\t\\t<div fxFlex=\\\"50\\\" fxFlex.xs=\\\"60\\\">{{station.stationName}}</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"25\\\" fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" style=\\\"color: blue\\\" (click)=\\\"openEditDialog(station)\\\" class=\\\"mat-button\\\">Edit</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: blue\\\" (click)=\\\"openEditDialog(station)\\\" class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"25\\\" fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" style=\\\"color: red\\\" (click)=\\\"openDeleteDialog(station)\\\" class=\\\"mat-button\\\">Remove</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: red\\\" (click)=\\\"openDeleteDialog(station)\\\" class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>close</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div fxFlex=\\\"30\\\" fxFlex.xs=\\\"60\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n\\t\\t<div fxFlex=\\\"60\\\" fxFlex.xs=\\\"100\\\">\\n\\t\\t\\t<mat-card>\\n\\t\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t  \\t<mat-card-title>Create Nursing Station</mat-card-title>\\n\\t\\t\\t\\t  \\t<mat-card-subtitle>Add a Nursing Station</mat-card-subtitle>\\n\\t\\t\\t\\t</mat-card-header>\\n\\t\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t\\t\\t<form [formGroup]=\\\"createStationForm\\\" (ngSubmit)=\\\"onSubmit(createStationForm,formDirective)\\\"  #formDirective=\\\"ngForm\\\">\\n\\t\\t\\t\\t\\t \\t\\t<div class=\\\"form-container\\\">\\n\\t\\t\\t\\t\\t \\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t \\t    \\t\\t<input matInput placeholder=\\\"Enter station name\\\" type=\\\"text\\\" formControlName=\\\"stationName\\\">\\n\\t\\t\\t\\t\\t \\t    \\t\\t<mat-icon matSuffix>important_devices</mat-icon>\\n\\t\\t\\t\\t\\t \\t    \\t\\t<mat-error *ngFor=\\\"let validation of validationMessages.stationName\\\">\\n\\t\\t\\t\\t\\t \\t    \\t    \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createStationForm.get('stationName').hasError(validation.type) && (createStationForm.get('stationName').dirty || createStationForm.get('stationName').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t\\t \\t    \\t\\t</mat-error>\\n\\t\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t \\t\\t</div>\\n\\t\\t\\t\\t\\t \\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" (click)=\\\"createStationForm.reset()\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t\\t\\t\\t\\t \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!createStationForm.valid\\\">Submit</button>\\n\\t\\t\\t\\t\\t \\t</form>\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t\\t<div fxFlex=\\\"40\\\" fxFlex.xs=\\\"50\\\"  fxHide.xs=\\\"true\\\">\\n\\t\\t\\t<mat-card>\\n\\t\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t  \\t<mat-card-title>Nursing Station</mat-card-title>\\n\\t\\t\\t\\t  \\t<mat-card-subtitle>Filters</mat-card-subtitle>\\n\\t\\t\\t\\t</mat-card-header>\\n\\t\\t\\t\\t<mat-card-content class=\\\"form-container\\\">\\n\\t\\t\\t\\t\\t<mat-form-field appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon matSuffix>search</mat-icon>\\n\\t\\t\\t\\t\\t\\t<input  matInput placeholder=\\\"search station\\\" type=\\\"text\\\" [(ngModel)]=\\\"term\\\">\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t</mat-card>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl,FormBuilder,FormGroup,Validators,FormGroupDirective} from '@angular/forms';\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\nimport {MatDialog, MatDialogConfig} from \"@angular/material\";\nimport { EditstationDialogComponent } from '../editstation-dialog/editstation-dialog.component';\nimport { DeletestationDialogComponent } from '../deletestation-dialog/deletestation-dialog.component';\n\n\n\n\n@Component({\n  selector: 'app-admin-mstation',\n  templateUrl: './admin-mstation.component.html',\n  styleUrls: ['./admin-mstation.component.css']\n})\nexport class AdminMstationComponent implements OnInit {\n\tcreateStationForm:FormGroup;\n\tstationData={};\n\tstations=[];\n  term;\n\tconstructor(private fb: FormBuilder,private admin: AdminService,public snackbar: MatSnackBar,private dialog: MatDialog) { \n\t\tthis.createStationForm = this.fb.group({\n\t\t\tstationName:['',Validators.required]\n\t\t}) \n\n\n  \t}\n\n  \tngOnInit() {\n  \t\tthis.admin.readStation()\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t        \tthis.stations = res.data;\n  \t\t        \t}\n              else{\n                this.snackbar.open(res.message, 'close')\n              }\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t}\n\n  \tonSubmit(formData: any, formDirective: FormGroupDirective): void {\n  \t\tthis.stationData = this.createStationForm.value;\n  \t\tconsole.log(this.stationData);\n  \t\tthis.admin.createStation(this.stationData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n  \t\t            this.admin.readStation()\n  \t\t            .subscribe(\n  \t\t            \tres => {\n  \t\t                    if(res.success){\n  \t\t                    \tthis.stations = res.data;\n  \t\t                    \t}\n  \t\t                    },\n  \t\t                err => {\n  \t\t                      console.log(err);\n  \t\t                }\n\n  \t\t            )\n  \t\t            formDirective.resetForm();\n  \t\t            this.createStationForm.reset();\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t   \n  \t}\n\n  \topenEditDialog(station) {\n  \t        const dialogConfig = new MatDialogConfig();\n  \t        dialogConfig.autoFocus = true;\n  \t        dialogConfig.height= '200px';\n  \t        dialogConfig.width='500px';\n  \t        dialogConfig.data = {\n  \t                _id: station._id,\n  \t                stationName:station.stationName\n  \t            };\n\n  \t        let dialogRef = this.dialog.open(EditstationDialogComponent, dialogConfig);\n  \t        dialogRef.afterClosed().subscribe(result => {\n  \t          if(result == 'success'){\n  \t          \tthis.admin.readStation()\n  \t          \t.subscribe(\n  \t          \t\tres => {\n  \t          \t        if(res.success){\n  \t          \t        \tthis.stations = res.data;\n  \t          \t        \t}\n  \t          \t        },\n  \t          \t    err => {\n  \t          \t          console.log(err);\n  \t          \t    }\n\n  \t          \t)\n  \t          }\n  \t        });\n  \t}\n\n  \topenDeleteDialog(station) {\n  \t    const dialogConfig = new MatDialogConfig();\n  \t    dialogConfig.autoFocus = true;\n  \t    dialogConfig.height= '200px';\n  \t    dialogConfig.width='400px';\n  \t    dialogConfig.data = {\n  \t        _id: station._id,\n  \t        stationName:station.stationName,\n  \t        title: 'Remove User'\n  \t    };\n  \t    let dialogRef = this.dialog.open(DeletestationDialogComponent, dialogConfig);\n  \t    dialogRef.afterClosed().subscribe(result => {\n  \t      if(result == 'success'){\n  \t      \tthis.admin.readStation()\n  \t      \t.subscribe(\n  \t      \t\tres => {\n  \t      \t        if(res.success){\n  \t      \t        \tthis.stations = res.data;\n  \t      \t        \t}\n                    else{\n                      this.stations = [];\n                    }\n  \t      \t        },\n  \t      \t    err => {\n  \t      \t          console.log(err);\n  \t      \t    }\n\n  \t      \t)\n  \t      }\n  \t    });\n  \t        \n  \t }\n\n\n    validationMessages = {\n    \t'stationName':[\n    \t\t{type:'required',message:'Station name is required'}\n    \t],\n    }\n\n}\n","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.scrollable {\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4tbXVzZXIvYWRtaW4tbXVzZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCx1QkFBdUI7Q0FDeEI7O0FBRUQ7RUFDRSxtQkFBbUI7Q0FDcEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi1tdXNlci9hZG1pbi1tdXNlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnNjcm9sbGFibGUge1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59Il19 */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column-reverse wrap\\\" style=\\\"height: 100%;width: 100%; margin-top: 10px;\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t<div fxFlex=\\\"70\\\" fxFlex.xs=\\\"40\\\" class=\\\"scrollable\\\">\\n\\t\\t<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\n\\t\\t\\t<mat-card fxLayout=\\\"row\\\" *ngFor=\\\"let user of users |filter:term\\\">\\n\\t\\t\\t\\t<div fxFlex=\\\"50\\\" fxFlex.xs=\\\"60\\\">{{user.userName}} <br>{{user.permission}}</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"25\\\" fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" style=\\\"color: blue\\\" (click)=\\\"openEditDialog(user._id)\\\" class=\\\"mat-button\\\">Change Password</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: blue\\\" (click)=\\\"openEditDialog(user._id)\\\" class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"25\\\" fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" style=\\\"color: red\\\" (click)=\\\"openDeleteDialog(user)\\\" class=\\\"mat-button\\\">Remove</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: red\\\" (click)=\\\"openDeleteDialog(user)\\\" class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>close</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div fxFlex=\\\"30\\\" fxFlex.xs=\\\"60\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n\\t\\t<div fxFlex=\\\"60\\\" fxFlex.xs=\\\"100\\\">\\n\\t\\t\\t<mat-card>\\n\\t\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t  \\t<mat-card-title>Create User Account</mat-card-title>\\n\\t\\t\\t\\t  \\t<mat-card-subtitle>Add a nurse/doctor account</mat-card-subtitle>\\n\\t\\t\\t\\t</mat-card-header>\\n\\t\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t\\t<form [formGroup]=\\\"createUserForm\\\" (ngSubmit)=\\\"onSubmit(createUserForm,formDirective)\\\"  #formDirective=\\\"ngForm\\\">\\n\\t\\t\\t\\t \\t\\t<div class=\\\"form-container\\\">\\n\\t\\t\\t\\t \\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t \\t    \\t\\t<input matInput placeholder=\\\"Enter username\\\" type=\\\"text\\\" formControlName=\\\"userName\\\">\\n\\t\\t\\t\\t \\t    \\t\\t<mat-icon matSuffix>person</mat-icon>\\n\\t\\t\\t\\t \\t    \\t\\t<mat-error *ngFor=\\\"let validation of validationMessages.userName\\\">\\n\\t\\t\\t\\t \\t    \\t    \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createUserForm.get('userName').hasError(validation.type) && (createUserForm.get('userName').dirty || createUserForm.get('userName').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t \\t    \\t\\t</mat-error>\\n\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t<mat-form-field>\\n\\t\\t\\t\\t \\t  \\t    \\t<input matInput placeholder=\\\"Enter a password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\n\\t\\t\\t\\t \\t  \\t    \\t<mat-icon matSuffix>vpn_key</mat-icon>\\n\\t\\t\\t\\t \\t  \\t    \\t<mat-error *ngFor=\\\"let validation of validationMessages.password\\\">\\n\\t\\t\\t\\t \\t  \\t    \\t    <mat-error class=\\\"error-message\\\" *ngIf=\\\"createUserForm.get('password').hasError(validation.type) && (createUserForm.get('password').dirty || createUserForm.get('password').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t \\t  \\t    \\t</mat-error>\\n\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t<mat-form-field>\\n\\t\\t\\t\\t \\t  \\t    \\t<input matInput placeholder=\\\"Confirm password\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\">\\n\\t\\t\\t\\t \\t  \\t    \\t<mat-icon matSuffix>vpn_key</mat-icon>\\n\\t\\t\\t\\t \\t  \\t    \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createUserForm.controls.confirmPassword.invalid\\\">Password missmatch</mat-error>\\n\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t<mat-form-field>\\n\\t\\t\\t\\t \\t  \\t  \\t\\t<mat-select placeholder=\\\"Account type\\\" formControlName=\\\"accountType\\\">\\n\\t\\t\\t\\t \\t  \\t    \\t\\t<mat-option *ngFor=\\\"let accountType of accountTypes\\\" [value]=\\\"accountType.value\\\">\\n\\t\\t\\t\\t \\t  \\t      \\t\\t\\t{{accountType.viewValue}}\\n\\t\\t\\t\\t \\t  \\t    \\t\\t</mat-option>\\n\\t\\t\\t\\t \\t  \\t  \\t\\t</mat-select>\\n\\t\\t\\t\\t \\t  \\t  \\t\\t<mat-icon matSuffix>account_box</mat-icon>\\n\\t\\t\\t\\t \\t  \\t  \\t\\t<mat-error *ngFor=\\\"let validation of validationMessages.accountType\\\">\\n\\t\\t\\t\\t \\t  \\t      \\t\\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createUserForm.get('accountType').hasError(validation.type) && (createUserForm.get('accountType').dirty || createUserForm.get('accountType').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t \\t  \\t  \\t\\t</mat-error>\\n\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t \\t\\t</div>\\n\\t\\t\\t\\t \\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" (click)=\\\"createUserForm.reset()\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t\\t\\t\\t \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!createUserForm.valid\\\">Submit</button>\\n\\t\\t\\t\\t \\t</form>\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t\\t<div fxFlex=\\\"40\\\" fxFlex.xs=\\\"50\\\"  fxHide.xs=\\\"true\\\">\\n\\t\\t\\t<mat-card>\\n\\t\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t  \\t<mat-card-title>Accounts</mat-card-title>\\n\\t\\t\\t\\t  \\t<mat-card-subtitle>Filters</mat-card-subtitle>\\n\\t\\t\\t\\t</mat-card-header>\\n\\t\\t\\t\\t<mat-card-content class=\\\"form-container\\\">\\n\\t\\t\\t\\t\\t<mat-form-field appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon matSuffix>search</mat-icon>\\n\\t\\t\\t\\t\\t\\t<input  matInput placeholder=\\\"search user\\\" type=\\\"text\\\" [(ngModel)]=term>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t</mat-card>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AdminService} from '../admin.service';\nimport { Router } from '@angular/router';\nimport {FormControl,FormBuilder,FormGroup,Validators,FormGroupDirective} from '@angular/forms';\nimport {passValidator} from '../validator';\nimport { MatSnackBar } from '@angular/material';\nimport {MatDialog, MatDialogConfig} from \"@angular/material\";\nimport { EdituserDialogComponent } from '../edituser-dialog/edituser-dialog.component';\nimport { DeleteuserDialogComponent } from '../deleteuser-dialog/deleteuser-dialog.component';\n\n\n\nexport interface AccountTypes {\n  value: string;\n  viewValue: string;\n}\n\n\n@Component({\n  selector: 'app-admin-muser',\n  templateUrl: './admin-muser.component.html',\n  styleUrls: ['./admin-muser.component.css']\n})\nexport class AdminMuserComponent implements OnInit {\n\taccountTypes: AccountTypes[] = [\n\t\t{value: 'nurse', viewValue: 'Nurse account'},\n\t    {value: 'doctor', viewValue: 'Doctor account'}\n\t  ];\n\tcreateUserForm:FormGroup;\n\tuserData = {};\n\tusers=[];\n  term;\n  \tconstructor(private fb: FormBuilder,private admin: AdminService,private router:Router,public snackbar: MatSnackBar,private dialog: MatDialog) {\n  \t\tthis.createUserForm = this.fb.group({\n  \t\tuserName:['',Validators.compose([Validators.required,Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])],\n  \t\tpassword:['',Validators.compose([Validators.required,Validators.minLength(5)])],\n  \t\tconfirmPassword:['',passValidator],\n  \t\taccountType:['',Validators.required]\n  \t\t}) \n\n  \t\t//Observable to update validator if password field changed again\n  \t\tthis.createUserForm.controls.password.valueChanges\n  \t\t    .subscribe(x => this.createUserForm.controls.confirmPassword.updateValueAndValidity())\n\n  \t}\n\n  \tngOnInit() {\n  \t\tthis.admin.readUser()\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t        \tthis.users = res.data;\n  \t\t        \t}\n              else{\n                this.snackbar.open(res.message, 'close')\n              }\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t}\n\n\n  \tonSubmit(formData: any, formDirective: FormGroupDirective): void {\n  \t\tthis.userData = this.createUserForm.value;\n  \t\tthis.admin.createUser(this.userData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n  \t\t            this.admin.readUser()\n  \t\t            .subscribe(\n  \t\t            \tres => {\n  \t\t                    if(res.success){\n  \t\t                    \tthis.users = res.data;\n  \t\t                    \t}\n  \t\t                    },\n  \t\t                err => {\n  \t\t                      console.log(err);\n  \t\t                }\n\n  \t\t            )\n\n  \t\t            formDirective.resetForm();\n  \t\t            this.createUserForm.reset();\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t   \n  \t}\n\n  \topenEditDialog(userid) {\n  \t        const dialogConfig = new MatDialogConfig();\n  \t        dialogConfig.autoFocus = true;\n  \t        dialogConfig.height= '300px';\n  \t        dialogConfig.width='500px';\n  \t        dialogConfig.data = {\n  \t                id: userid,\n  \t                title: 'Change password'\n  \t            };\n  \t        let dialogRef = this.dialog.open(EdituserDialogComponent, dialogConfig);\n  \t }\n\n  \t openDeleteDialog(user) {\n  \t         const dialogConfig = new MatDialogConfig();\n  \t         dialogConfig.autoFocus = true;\n  \t         dialogConfig.height= '200px';\n  \t         dialogConfig.width='400px';\n  \t         dialogConfig.data = {\n  \t                 id: user._id,\n  \t                 userName:user.userName,\n  \t                 title: 'Remove User'\n  \t             };\n  \t         let dialogRef = this.dialog.open(DeleteuserDialogComponent, dialogConfig);\n  \t         dialogRef.afterClosed().subscribe(result => {\n  \t           if(result == 'success'){\n  \t           \tthis.admin.readUser()\n  \t           \t.subscribe(\n  \t           \t\tres => {\n  \t           \t        if(res.success){\n  \t           \t        \tconsole.log(res);\n  \t           \t        \tthis.users = res.data;\n  \t           \t        \t}\n                         else{\n                           this.users = [];\n                         }\n  \t           \t        },\n  \t           \t    err => {\n  \t           \t          console.log(err);\n  \t           \t    }\n\n  \t           \t)\n  \t           }\n  \t         });\n\n  \t  }\n\n\n    validationMessages = {\n  \t    'userName': [\n      \t    { type: 'required', message: 'Username is required' },\n      \t    { type: 'validUsername', message: 'Your username has already been taken' },\n      \t    { type: 'pattern', message: 'Enter a valid email' }\n    \t],\n    \t'password': [\n      \t    { type: 'required', message: 'Password is required' },\n      \t    { type: 'minlength', message: 'Password must be at least 5 characters long' },\n    \t],\n    \t'accountType':[\n    \t\t{type:'required',message:'Account type is required'}\n    \t]\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpParams} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n\tprivate manageUserUrl = 'http://173.230.145.245:4000/api/admin/user'\n  private manageStationUrl = 'http://173.230.145.245:4000/api/admin/station'\n  private manageBedUrl = 'http://173.230.145.245:4000/api/admin/bed'\n  private manageIvsetUrl = 'http://173.230.145.245:4000/api/admin/ivset'\n  private manageDripoUrl = 'http://173.230.145.245:4000/api/admin/dripo'\n  \tconstructor(private http:HttpClient,private router:Router) { }\n  \tcreateUser(userData){\n  \t\treturn this.http.post<any>(this.manageUserUrl,userData)\n  \t}\n  \treadUser(){\n  \t\treturn this.http.get<any>(this.manageUserUrl)\n  \t}\n  \tupdateUser(editUserData){\n  \t  \treturn this.http.put<any>(this.manageUserUrl,editUserData)\n  \t}\n  \tdeleteUser(deleteUserData){\n  \t\tlet params = new HttpParams();\n  \t\tparams = params.append(\"_id\", deleteUserData.id);\n  \t\treturn this.http.delete<any>(this.manageUserUrl,{params: params})\n  \t}\n    createStation(stationData){\n      return this.http.post<any>(this.manageStationUrl,stationData)\n    }\n    readStation(){\n      return this.http.get<any>(this.manageStationUrl)\n    }\n\n    updateStation(stationData){\n      return this.http.put<any>(this.manageStationUrl,stationData)\n    }\n    deleteStation(deleteStationData){\n      let params = new HttpParams();\n      params = params.append(\"_id\", deleteStationData._id);\n      return this.http.delete<any>(this.manageStationUrl,{params: params})\n    }\n    createBed(bedData){\n      return this.http.post<any>(this.manageBedUrl,bedData)\n    }\n    readBed(){\n      return this.http.get<any>(this.manageBedUrl)\n    }\n    updateBed(bedData){\n      return this.http.put<any>(this.manageBedUrl,bedData)\n    }\n    deleteBed(deleteBedData){\n      let params = new HttpParams();\n      params = params.append(\"_id\", deleteBedData._id);\n      return this.http.delete<any>(this.manageBedUrl,{params: params})\n    }\n    createIvset(ivsetData){\n      return this.http.post<any>(this.manageIvsetUrl,ivsetData)\n    }\n    readIvset(){\n      return this.http.get<any>(this.manageIvsetUrl)\n    }\n    updateIvset(ivsetData){\n      return this.http.put<any>(this.manageIvsetUrl,ivsetData)\n    }\n    deleteIvset(deleteIvsetData){\n      let params = new HttpParams();\n      params = params.append(\"_id\", deleteIvsetData._id);\n      return this.http.delete<any>(this.manageIvsetUrl,{params: params})\n    }\n    createDripo(dripoData){\n      return this.http.post<any>(this.manageDripoUrl,dripoData)\n    }\n    readDripo(){\n      return this.http.get<any>(this.manageDripoUrl)\n    }\n    updateDripo(dripoData){\n      return this.http.put<any>(this.manageDripoUrl,dripoData)\n    }\n    deleteDripo(deleteDripoData){\n      let params = new HttpParams();\n      params = params.append(\"_id\", deleteDripoData._id);\n      return this.http.delete<any>(this.manageDripoUrl,{params: params})\n    }\n\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport {UnauthorizedComponent} from './unauthorized/unauthorized.component'\nimport { SelectStationComponent } from './select-station/select-station.component';\nimport { NurseHomeComponent } from './nurse-home/nurse-home.component';\nimport { AdminHomeComponent} from './admin-home/admin-home.component';\nimport { AdminMuserComponent } from './admin-muser/admin-muser.component';\nimport { AdminMstationComponent } from './admin-mstation/admin-mstation.component';\nimport { AdminMbedComponent } from './admin-mbed/admin-mbed.component';\nimport { AdminMivsetComponent } from './admin-mivset/admin-mivset.component';\nimport { AdminMdripoComponent } from './admin-mdripo/admin-mdripo.component';\nimport { NurseMpatientComponent } from './nurse-mpatient/nurse-mpatient.component';\nimport { NursePhistoryComponent } from './nurse-phistory/nurse-phistory.component';\nimport { ActivateAccountComponent } from './activate-account/activate-account.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport {AuthGuard} from './auth.guard';\nimport { RoleGuardService} from './role-guard.service'\n\nconst routes: Routes = [\n\t{\n\t\tpath:'',\n\t\tredirectTo:'/login',\n\t\tpathMatch:'full'\n\t},\n\t{\n\t\tpath:'*',\n\t\tredirectTo:'/login',\n\t\tpathMatch:'full'\n\t},\n\t{\n\t\tpath:'register',\n\t\tcomponent:RegisterComponent\n\t},\n\t{\n\t\tpath:'activate/:token',\n\t\tcomponent:ActivateAccountComponent\n\t},\n\t{\n\t\tpath:'forgotpassword',\n\t\tcomponent:ForgotPasswordComponent\n\t},\n\n\t{\n\t\tpath:'resetpassword/:token',\n\t\tcomponent:ResetPasswordComponent\n\t},\n\n\t{\n\t\tpath:'login',\n\t\tcomponent: LoginComponent\n\t},\n\t{\n\t\tpath:'unauthorized',\n\t\tcomponent:UnauthorizedComponent\n\t},\n\t{\n\t\tpath:'admin/home',\n\t\tcomponent:AdminHomeComponent,\n\t\tcanActivate: [RoleGuardService], \n\t\t   \tdata: { \n\t\t      expectedRole: 'admin'\n\t\t   \t} \t\n\t},\n\t{\n\t\tpath:'admin/manageusers',\n\t\tcomponent:AdminMuserComponent,\n\t\tcanActivate: [RoleGuardService], \n\t\t   \tdata: { \n\t\t      expectedRole: 'admin'\n\t\t   \t} \t\n\t},\n\t{\n\t\tpath:'admin/managestations',\n\t\tcomponent:AdminMstationComponent,\n\t\tcanActivate: [RoleGuardService], \n\t\t   \tdata: { \n\t\t      expectedRole: 'admin'\n\t\t   \t} \t\n\t},\n\t{\n\t\tpath:'admin/managebeds',\n\t\tcomponent:AdminMbedComponent,\n\t\tcanActivate: [RoleGuardService], \n\t\t   \tdata: { \n\t\t      expectedRole: 'admin'\n\t\t   \t} \t\n\t},\n\n\t{\n\t\tpath:'admin/manageivsets',\n\t\tcomponent:AdminMivsetComponent,\n\t\tcanActivate: [RoleGuardService], \n\t\t   \tdata: { \n\t\t      expectedRole: 'admin'\n\t\t   \t} \t\n\t},\n\t{\n\t\tpath:'admin/managedripos',\n\t\tcomponent:AdminMdripoComponent,\n\t\tcanActivate: [RoleGuardService], \n\t\t   \tdata: { \n\t\t      expectedRole: 'admin'\n\t\t   \t} \t\n\t},\n\n\t{\n\t\tpath:'nurse/selectstation',\n\t\tcomponent:SelectStationComponent,\n\t\tcanActivate: [RoleGuardService], \n\t\t   \tdata: { \n\t\t      expectedRole: 'nurse'\n\t\t   \t} \n\t},\n\t{\n\t\tpath:'nurse/home',\n\t\tcomponent:NurseHomeComponent,\n\t\tcanActivate: [RoleGuardService], \n\t\t   \tdata: { \n\t\t      expectedRole: 'nurse'\n\t\t   \t} \n\n\t},\n\t{\n\t\tpath:'nurse/managepatients',\n\t\tcomponent:NurseMpatientComponent,\n\t\tcanActivate: [RoleGuardService], \n\t\t   \tdata: { \n\t\t      expectedRole: 'nurse'\n\t\t   \t} \n\n\t},\n\t{\n\t\tpath:'nurse/patienthistory/:id',\n\t\tcomponent:NursePhistoryComponent,\n\t\tcanActivate: [RoleGuardService], \n\t\t   \tdata: { \n\t\t      expectedRole: 'nurse'\n\t\t   \t} \n\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".toolbar-spacer {\\n    flex: 1 1 auto;\\n}\\n.toolbar-active{\\n\\tcolor:black;\\n}\\n.main-container {\\n  width: 100%;\\n  height: 94%;\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\n  background: #eee;\\n\\n}\\n.active-list-item {\\n  color: #3F51B5 !important; /* Note: You could also use a custom theme */\\n  background-color: inherit !important;\\n}\\n.mat-list-item{\\n\\tbackground-color: inherit !important;\\n\\n}\\n.form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0NBQ2xCO0FBQ0Q7Q0FDQyxZQUFZO0NBQ1o7QUFDRDtFQUNFLFlBQVk7RUFDWixZQUFZO0VBQ1oscUNBQXFDO0VBQ3JDLGlCQUFpQjs7Q0FFbEI7QUFHRDtFQUNFLDBCQUEwQixDQUFDLDZDQUE2QztFQUN4RSxxQ0FBcUM7Q0FDdEM7QUFDRDtDQUNDLHFDQUFxQzs7Q0FFckM7QUFFRDtFQUNFLGNBQWM7RUFDZCx1QkFBdUI7Q0FDeEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b29sYmFyLXNwYWNlciB7XG4gICAgZmxleDogMSAxIGF1dG87XG59XG4udG9vbGJhci1hY3RpdmV7XG5cdGNvbG9yOmJsYWNrO1xufVxuLm1haW4tY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogOTQlO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIGJhY2tncm91bmQ6ICNlZWU7XG5cbn1cblxuXG4uYWN0aXZlLWxpc3QtaXRlbSB7XG4gIGNvbG9yOiAjM0Y1MUI1ICFpbXBvcnRhbnQ7IC8qIE5vdGU6IFlvdSBjb3VsZCBhbHNvIHVzZSBhIGN1c3RvbSB0aGVtZSAqL1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG59XG4ubWF0LWxpc3QtaXRlbXtcblx0YmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdCAhaW1wb3J0YW50O1xuXG59XG5cbi5mb3JtLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59Il19 */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n\\t<button mat-icon-button *ngIf=\\\"authService.loggedIn() && authService.stationSelected()\\\" aria-label=\\\"Toggle sidenav\\\" (click)=\\\"drawer.toggle()\\\"><mat-icon>menu</mat-icon></button>\\n  \\t<span *ngIf=\\\"!authService.loggedIn()\\\">Evelabs Care</span>\\n  \\t<span class=\\\"toolbar-spacer\\\"></span>\\n  \\t<button *ngIf=\\\"!authService.loggedIn()\\\" mat-button routerLink=\\\"/login\\\" routerLinkActive=\\\"toolbar-active\\\">Login</button>\\n  \\t<button *ngIf=\\\"!authService.loggedIn()\\\" mat-button routerLink=\\\"/register\\\" routerLinkActive=\\\"toolbar-active\\\">Register</button>\\n    <button *ngIf=\\\"nursePermission()\\\" mat-button>{{authService.getStationName()}}</button>\\n  \\t<button *ngIf=\\\"authService.loggedIn()\\\" mat-button [matMenuTriggerFor]=\\\"accountMenu\\\" routerLinkActive=\\\"toolbar-active\\\"><mat-icon>account_circle</mat-icon></button>\\n  \\t<mat-menu #accountMenu=\\\"matMenu\\\">\\n  \\t  <button mat-menu-item disabled>\\n  \\t      <mat-icon>person_outline</mat-icon>\\n  \\t      <span>{{authService.getUserName()}}</span>\\n  \\t    </button>\\n  \\t    <button mat-menu-item disabled>\\n  \\t      <mat-icon>local_hospital</mat-icon>\\n  \\t      <span>{{authService.getHospitalName()}}</span>\\n  \\t    </button>\\n  \\t    <button mat-menu-item (click)=\\\"authService.logoutUser()\\\">\\n  \\t      <mat-icon>power_settings_new</mat-icon>\\n  \\t      <span>Logout</span>\\n  \\t    </button>\\n  \\t</mat-menu>\\n\\n</mat-toolbar>\\n<mat-sidenav-container class=\\\"main-container\\\" [hasBackdrop]=\\\"true\\\">\\n\\t<mat-sidenav #drawer mode=\\\"over\\\" closed role=\\\"navigation\\\">\\n    \\t<mat-nav-list  *ngFor=\\\"let item of authService.getMenu()\\\" (click)=\\\"drawer.close()\\\">\\n      \\t\\t<a mat-list-item routerLinkActive=\\\"active-list-item\\\" routerLink='{{item.href}}' style=\\\"padding-right: 20px;\\\"><mat-icon style=\\\"padding-right: 20px;\\\">{{item.icon}}</mat-icon><span>{{item.menu}}</span></a>\\n    \\t</mat-nav-list>\\n  \\t</mat-sidenav>\\n  \\t<mat-sidenav-content>\\n    \\t<router-outlet></router-outlet>\\n  \\t</mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\\n\\n\"","import { Component , OnInit} from '@angular/core';\nimport  { AuthService} from './auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Subject, Observable } from \"rxjs\";\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'EvelabsCare';\n  constructor(public authService:AuthService,private router:Router){\n  }\n\n  public jwtHelper = new JwtHelperService();\n  public menuItems=[];\n\n  ngOnInit() {\n    if(this.authService.loggedIn()){\n      const token = localStorage.getItem('token');\n      const decodedToken = this.jwtHelper.decodeToken(token);\n      if(decodedToken.permission == 'nurse' && decodedToken.stationName){\n        this.router.navigate(['/nurse/home']);\n      }\n      else if(decodedToken.permission == 'nurse' && !decodedToken.stationName){\n        this.router.navigate(['/nurse/selectstation']);\n      }\n      else if(decodedToken.permission == 'admin'){\n        this.router.navigate(['/admin/home']);\n      }\n    }\n    else{\n      // this.router.navigate(['/login'])\n    }\n  }\n\n  adminPermission():boolean{\n  \tif(this.authService.loggedIn()){\n  \t\tconst token = localStorage.getItem('token');\n  \t\tconst decodedToken = this.jwtHelper.decodeToken(token);\n  \t\tif(decodedToken.permission == 'admin'){\n  \t\t\treturn true;\n  \t\t}\n  \t\telse{\n  \t\t\treturn false;\n  \t\t}\n  \t}\n  }\n\n\n  nursePermission():boolean{\n  \tif(this.authService.loggedIn()){\n  \t\tconst token = localStorage.getItem('token');\n  \t\tconst decodedToken = this.jwtHelper.decodeToken(token);\n  \t\tif(decodedToken.permission == 'nurse'){\n  \t\t\treturn true;\n  \t\t}\n  \t\telse{\n  \t\t\treturn false;\n  \t\t}\n  \t}\n  }\n\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SlickModule } from 'ngx-slick';\nimport {MatButtonModule,\n        MatCheckboxModule,\n        MatToolbarModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatCardModule,\n        MatIconModule,\n        MatListModule,\n        MatMenuModule,\n        MatDialogModule,\n        MatGridListModule,\n        MatSnackBarModule,\n        MatBadgeModule,\n        MatTableModule,\n        MatExpansionModule,\n        MatTooltipModule,\n        MatProgressBarModule,\n        MatSidenavModule} from '@angular/material';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { SelectStationComponent } from './select-station/select-station.component';\nimport { NurseHomeComponent } from './nurse-home/nurse-home.component';\nimport {AuthService} from './auth.service';\nimport {AdminService} from './admin.service';\nimport {NurseService} from './nurse.service';\nimport {AuthGuard} from './auth.guard';\nimport {TokenInterceptorService} from './token-interceptor.service';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { UnauthorizedComponent } from './unauthorized/unauthorized.component';\nimport { AdminMstationComponent } from './admin-mstation/admin-mstation.component';\nimport { AdminMuserComponent } from './admin-muser/admin-muser.component';\nimport { AdminMbedComponent } from './admin-mbed/admin-mbed.component';\nimport { AdminMivsetComponent } from './admin-mivset/admin-mivset.component';\nimport { AdminMdripoComponent } from './admin-mdripo/admin-mdripo.component';\nimport { EdituserDialogComponent } from './edituser-dialog/edituser-dialog.component';\nimport { DeleteuserDialogComponent } from './deleteuser-dialog/deleteuser-dialog.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { FormsModule } from '@angular/forms';\nimport { EditstationDialogComponent } from './editstation-dialog/editstation-dialog.component';\nimport { DeletestationDialogComponent } from './deletestation-dialog/deletestation-dialog.component';\nimport { EditbedDialogComponent } from './editbed-dialog/editbed-dialog.component';\nimport { DeletebedDialogComponent } from './deletebed-dialog/deletebed-dialog.component';\nimport { EditivsetDialogComponent } from './editivset-dialog/editivset-dialog.component';\nimport { DeleteivsetDialogComponent } from './deleteivset-dialog/deleteivset-dialog.component';\nimport { EditdripoDialogComponent } from './editdripo-dialog/editdripo-dialog.component';\nimport { DeletedripoDialogComponent } from './deletedripo-dialog/deletedripo-dialog.component';\nimport { NurseMpatientComponent } from './nurse-mpatient/nurse-mpatient.component';\nimport { EditpatientDialogComponent } from './editpatient-dialog/editpatient-dialog.component';\nimport { DischargepatientDialogComponent } from './dischargepatient-dialog/dischargepatient-dialog.component';\nimport { AddtaskDialogComponent } from './addtask-dialog/addtask-dialog.component';\nimport { TaskactivityDialogComponent } from './taskactivity-dialog/taskactivity-dialog.component';\nimport { NursePhistoryComponent } from './nurse-phistory/nurse-phistory.component';\nimport { ActivateAccountComponent } from './activate-account/activate-account.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    SelectStationComponent,\n    NurseHomeComponent,\n    AdminHomeComponent,\n    UnauthorizedComponent,\n    AdminMstationComponent,\n    AdminMuserComponent,\n    AdminMbedComponent,\n    AdminMivsetComponent,\n    AdminMdripoComponent,\n    EdituserDialogComponent,\n    DeleteuserDialogComponent,\n    EditstationDialogComponent,\n    DeletestationDialogComponent,\n    EditbedDialogComponent,\n    DeletebedDialogComponent,\n    EditivsetDialogComponent,\n    DeleteivsetDialogComponent,\n    EditdripoDialogComponent,\n    DeletedripoDialogComponent,\n    NurseMpatientComponent,\n    EditpatientDialogComponent,\n    DischargepatientDialogComponent,\n    AddtaskDialogComponent,\n    TaskactivityDialogComponent,\n    NursePhistoryComponent,\n    ActivateAccountComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule ,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    SlickModule.forRoot(),\n    FlexLayoutModule,\n    Ng2SearchPipeModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCardModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatProgressBarModule,\n    MatBadgeModule,\n    MatTableModule,\n    MatExpansionModule,\n    MatTooltipModule,\n    MatListModule\n  ],\n  providers: [{\n    provide:HTTP_INTERCEPTORS,\n    useClass:TokenInterceptorService,\n    multi:true\n  },AuthService,AuthGuard,AdminService,NurseService,HttpClientModule\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [EdituserDialogComponent,DeleteuserDialogComponent,EditstationDialogComponent,\n  DeletestationDialogComponent,EditbedDialogComponent,DeletebedDialogComponent,EditivsetDialogComponent,\n  DeleteivsetDialogComponent,EditdripoDialogComponent,DeletedripoDialogComponent,EditpatientDialogComponent,\n  DischargepatientDialogComponent,AddtaskDialogComponent,TaskactivityDialogComponent\n]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from './auth.service'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\tconstructor(private authService:AuthService,private router:Router){}\n  \tcanActivate():boolean{\n  \t\tif(this.authService.loggedIn()){\n  \t\t\treturn true;\n  \t\t}\n  \t\telse{\n  \t\t\tthis.router.navigate(['/login']);\n  \t\t\treturn false;\n  \t\t}\n  \t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient ,HttpParams} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  public userName;\n  public hospitalName;\n  public stationName;\n  public permission;\n\tprivate registerUrl = \"http://173.230.145.245:4000/api/register\";\n\tprivate loginUrl = \"http://173.230.145.245:4000/api/login\";\n  private activateAccountUrl  = \"http://173.230.145.245:4000/api/activate\";\n  private forgotPasswordUrl = \"http://173.230.145.245:4000/api/forgotpassword\";\n  private resetPasswordUrl = \"http://173.230.145.245:4000/api/resetpassword\";\n\n  \tconstructor(private http:HttpClient,\n                private router:Router) { }\n    public jwtHelper = new JwtHelperService();\n  \tregisterUser(user){\n  \t\treturn this.http.post<any>(this.registerUrl,user)\n  \t}\n\n  \tloginUser(user){\n  \t\treturn this.http.post<any>(this.loginUrl,user)\n  \t}\n    activateAccount(token){\n      let params = new HttpParams();\n      params = params.append(\"token\", token);\n      return this.http.get<any>(this.activateAccountUrl,{params: params})\n    }\n\n    forgotPassword(userData){\n      return this.http.put<any>(this.forgotPasswordUrl,userData)\n    }\n\n    checkResetPasswordLink(token){\n      let params = new HttpParams();\n      params = params.append(\"token\", token);\n      return this.http.get<any>(this.resetPasswordUrl,{params: params})\n    }\n    resetPassword(resetData){\n      return this.http.post<any>(this.resetPasswordUrl,resetData)\n    }\n\n  \tpublic loggedIn(){\n      const token = localStorage.getItem('token');\n      const decodedToken = this.jwtHelper.decodeToken(token);\n      if(decodedToken){\n        return true;\n      }\n      else{\n        return false;\n      }\n    }\n\n    public stationSelected(){\n      if(!!localStorage.getItem('token')){\n      const token = localStorage.getItem('token');\n      const decodedToken = this.jwtHelper.decodeToken(token);\n      this.stationName = decodedToken.stationName;\n      if(decodedToken.permission == 'admin'){\n        return true;\n      }\n      else if(decodedToken.permission == 'nurse' && !this.stationName){\n        return false;\n      }\n      else if(decodedToken.permission == 'nurse' && this.stationName){\n        return true;\n      }\n      }\n      else{\n        return false;\n      }\n    }\n    \n    getToken(): string {\n        return localStorage.getItem('token');\n    }\n    logoutUser(){\n        localStorage.removeItem('token');\n        this.router.navigate(['/login']);\n    }\n\n    //function to set dashboard for different accounts\n    getMenu(){\n      if(!!localStorage.getItem('token')){\n        const token = localStorage.getItem('token');\n        const decodedToken = this.jwtHelper.decodeToken(token);\n        if(decodedToken.permission == 'admin'){\n          return this.adminMenuItems;\n        }\n        else if(decodedToken.permission == 'nurse'){\n          return this.nurseMenuItems;\n        }\n        else{\n          return this.nullArray;\n        }\n      }\n      else{\n        return this.nullArray;\n\n      }\n      \n    }\n    public nullArray = [{}];\n    public adminMenuItems=[{menu:'Home',icon:'home',href:'/admin/home'},\n                 {menu:'Manage User',icon:'account_circle',href:'/admin/manageusers'},\n                 {menu:'Manage Station',icon:'important_devices',href:'/admin/managestations'},\n                 {menu:'Manage Beds',icon:'hotel',href:'/admin/managebeds'},\n                 {menu:'Manage Ivset',icon:'opacity',href:'/admin/manageivsets'},\n                 {menu:'Manage Dripo',icon:'speaker_phone',href:'/admin/managedripos'}];\n\n\n    public nurseMenuItems=[{menu:'Home',icon:'home',href:'nurse/home'},\n                 {menu:'Manage Patient',icon:'people',href:'nurse/managepatients'}];\n\n     getUserName(){\n       if(!!localStorage.getItem('token')){\n       const token = localStorage.getItem('token');\n       const decodedToken = this.jwtHelper.decodeToken(token);\n       this.userName = decodedToken.userName;\n       return this.userName;\n       }\n       else{\n         return 'username';\n       }\n     }\n     getHospitalName(){\n       if(!!localStorage.getItem('token')){\n       const token = localStorage.getItem('token');\n       const decodedToken = this.jwtHelper.decodeToken(token);\n       this.hospitalName = decodedToken.hospitalName;\n       return this.hospitalName;\n       }\n       else{\n         return 'hospitalname';\n       }\n     }\n\n     getStationName(){\n       if(!!localStorage.getItem('token')){\n       const token = localStorage.getItem('token');\n       const decodedToken = this.jwtHelper.decodeToken(token);\n       this.stationName = decodedToken.stationName;\n       return this.stationName;\n       }\n       else{\n         return 'stationName';\n       }\n     }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbGV0ZWJlZC1kaWFsb2cvZGVsZXRlYmVkLWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h2 mat-dialog-title>Remove Bed</h2>\\n\\n<mat-dialog-content>\\n\\n\\tAre you sure you want to remove {{deleteBedData.bedName}} ?\\n \\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n    <button class=\\\"mat-raised-button mat-primary\\\" color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Close</button>\\n    <button class=\\\"mat-raised-button mat-accent\\\"(click)=\\\"removeBed()\\\">Remove</button>\\n</mat-dialog-actions>\\n\"","import { Component, OnInit, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-deletebed-dialog',\n  templateUrl: './deletebed-dialog.component.html',\n  styleUrls: ['./deletebed-dialog.component.css']\n})\nexport class DeletebedDialogComponent implements OnInit {\n\tdeleteBedData={bedName:''};\n  constructor(private admin: AdminService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<DeletebedDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) data) {\n  \t\t\tthis.deleteBedData = data;\n         }\n\n  \tngOnInit() {\n  \t}\n\n  \tremoveBed(){\n  \t\tthis.admin.deleteBed(this.deleteBedData)\n  \t\t\t.subscribe(\n  \t\t\t\tres => {\n  \t\t\t        if(res.success){\n  \t\t\t            this.snackbar.open(res.message, 'close')\n  \t\t\t            this.dialogRef.close('success');\n  \t\t\t        \t}\n  \t\t\t        },\n  \t\t\t    err => {\n  \t\t\t          console.log(err);\n  \t\t\t    }\n\n  \t\t\t)\n\n  \t}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbGV0ZWRyaXBvLWRpYWxvZy9kZWxldGVkcmlwby1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2 mat-dialog-title>Remove Dripo</h2>\\n\\n<mat-dialog-content>\\n\\n\\tAre you sure you want to remove {{deleteDripoData.dripoId}} ?\\n \\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n    <button class=\\\"mat-raised-button mat-primary\\\" color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Close</button>\\n    <button class=\\\"mat-raised-button mat-accent\\\"(click)=\\\"removeDripo()\\\">Remove</button>\\n</mat-dialog-actions>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-deletedripo-dialog',\n  templateUrl: './deletedripo-dialog.component.html',\n  styleUrls: ['./deletedripo-dialog.component.css']\n})\nexport class DeletedripoDialogComponent implements OnInit {\n\tdeleteDripoData={dripoId:''};\n  \tconstructor(private admin: AdminService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<DeletedripoDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) data) {\n  \t\t\tthis.deleteDripoData = data;\n\n         }\n\n  \tngOnInit() {\n  \t}\n\n  \tremoveDripo(){\n  \t\tthis.admin.deleteDripo(this.deleteDripoData)\n  \t\t\t.subscribe(\n  \t\t\t\tres => {\n  \t\t\t        if(res.success){\n  \t\t\t            this.snackbar.open(res.message, 'close')\n  \t\t\t            this.dialogRef.close('success');\n  \t\t\t        \t}\n  \t\t\t        },\n  \t\t\t    err => {\n  \t\t\t          console.log(err);\n  \t\t\t    }\n\n  \t\t\t)\n\n  \t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbGV0ZWl2c2V0LWRpYWxvZy9kZWxldGVpdnNldC1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2 mat-dialog-title>Remove Ivset</h2>\\n\\n<mat-dialog-content>\\n\\n\\tAre you sure you want to remove {{deleteIvsetData.ivsetModel}} with dpf {{deleteIvsetData.ivsetDpf}} ?\\n \\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n    <button class=\\\"mat-raised-button mat-primary\\\" color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Close</button>\\n    <button class=\\\"mat-raised-button mat-accent\\\"(click)=\\\"removeIvset()\\\">Remove</button>\\n</mat-dialog-actions>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\n@Component({\n  selector: 'app-deleteivset-dialog',\n  templateUrl: './deleteivset-dialog.component.html',\n  styleUrls: ['./deleteivset-dialog.component.css']\n})\nexport class DeleteivsetDialogComponent implements OnInit {\n\tdeleteIvsetData={ivsetModel:'',ivsetDpf:''};\n  constructor(private admin: AdminService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<DeleteivsetDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) data) { \n  \t\tthis.deleteIvsetData = data;\n  \t}\n\n  ngOnInit() {\n  }\n\n  removeIvset(){\n  \tthis.admin.deleteIvset(this.deleteIvsetData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n  \t\t            this.dialogRef.close('success');\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbGV0ZXN0YXRpb24tZGlhbG9nL2RlbGV0ZXN0YXRpb24tZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2 mat-dialog-title>Remove Station</h2>\\n\\n<mat-dialog-content>\\n\\n\\tAre you sure you want to remove {{deleteStationData.stationName}} ?\\n \\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n    <button class=\\\"mat-raised-button mat-primary\\\" color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Close</button>\\n    <button class=\\\"mat-raised-button mat-accent\\\"(click)=\\\"removeStation()\\\">Remove</button>\\n</mat-dialog-actions>\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-deletestation-dialog',\n  templateUrl: './deletestation-dialog.component.html',\n  styleUrls: ['./deletestation-dialog.component.css']\n})\nexport class DeletestationDialogComponent implements OnInit {\n\tdeleteStationData={stationName:''};\n  \tconstructor(private admin: AdminService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<DeletestationDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) data) {\n  \t\t\tthis.deleteStationData = data;\n         }\n\n  \tngOnInit() {\n  \t}\n\n  \tremoveStation(){\n  \t\tthis.admin.deleteStation(this.deleteStationData)\n  \t\t\t.subscribe(\n  \t\t\t\tres => {\n  \t\t\t        if(res.success){\n  \t\t\t            this.snackbar.open(res.message, 'close')\n  \t\t\t            this.dialogRef.close('success');\n  \t\t\t        \t}\n  \t\t\t        },\n  \t\t\t    err => {\n  \t\t\t          console.log(err);\n  \t\t\t    }\n\n  \t\t\t)\n\n  \t}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbGV0ZXVzZXItZGlhbG9nL2RlbGV0ZXVzZXItZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<h2 mat-dialog-title>Remove User</h2>\\n\\n<mat-dialog-content>\\n\\n\\tAre you sure you want to remove {{deleteUserData.userName}} ?\\n \\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n    <button class=\\\"mat-raised-button mat-primary\\\" color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Close</button>\\n    <button class=\\\"mat-raised-button mat-accent\\\"(click)=\\\"removeUser()\\\">Remove</button>\\n</mat-dialog-actions>\\n\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\n\n\n@Component({\n  selector: 'app-deleteuser-dialog',\n  templateUrl: './deleteuser-dialog.component.html',\n  styleUrls: ['./deleteuser-dialog.component.css']\n})\nexport class DeleteuserDialogComponent implements OnInit {\n\n  deleteUserData={userName:''};\n  constructor(private admin: AdminService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<DeleteuserDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) data) { \n  \tthis.deleteUserData = data;\n  }\n\n  ngOnInit() {\n  }\n\n  removeUser(){\n  \tthis.admin.deleteUser(this.deleteUserData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n  \t\t            this.dialogRef.close('success');\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc2NoYXJnZXBhdGllbnQtZGlhbG9nL2Rpc2NoYXJnZXBhdGllbnQtZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2 mat-dialog-title>Discharge Patient</h2>\\n\\n<mat-dialog-content>\\n\\n\\tAre you sure you want to discharge {{dischargePatientData.patientName}} from {{dischargePatientData.bedName}} ?\\n \\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n    <button class=\\\"mat-raised-button mat-primary\\\" color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Close</button>\\n    <button class=\\\"mat-raised-button mat-accent\\\"(click)=\\\"removePatient()\\\">Remove</button>\\n</mat-dialog-actions>\\n\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {FormControl,FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport {NurseService} from '../nurse.service';\nimport { MatSnackBar } from '@angular/material';\n@Component({\n  selector: 'app-dischargepatient-dialog',\n  templateUrl: './dischargepatient-dialog.component.html',\n  styleUrls: ['./dischargepatient-dialog.component.css']\n})\nexport class DischargepatientDialogComponent implements OnInit {\n\tdischargePatientData={bedName:'',patientName:''};\n  \tconstructor(private nurse: NurseService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<DischargepatientDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) data) { \n  \t\tthis.dischargePatientData = data;\n  \t}\n\n  \tngOnInit() {\n  \t}\n  \tremovePatient(){\n  \t\tthis.nurse.dischargePatient(this.dischargePatientData)\n  \t\t\t.subscribe(\n  \t\t\t\tres => {\n  \t\t\t        if(res.success){\n  \t\t\t            this.snackbar.open(res.message, 'close')\n  \t\t\t            this.dialogRef.close('success');\n  \t\t\t        \t}\n  \t\t\t        },\n  \t\t\t    err => {\n  \t\t\t          console.log(err);\n  \t\t\t    }\n\n  \t\t\t)\n\n  \t}\n}\n","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdGJlZC1kaWFsb2cvZWRpdGJlZC1kaWFsb2cuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCx1QkFBdUI7Q0FDeEIiLCJmaWxlIjoic3JjL2FwcC9lZGl0YmVkLWRpYWxvZy9lZGl0YmVkLWRpYWxvZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn0iXX0= */\"","module.exports = \"<h2 mat-dialog-title>Edit Bed</h2>\\n<mat-dialog-content>\\n\\t<form [formGroup]=\\\"editBedForm\\\" (ngSubmit)=\\\"onSubmit(editBedForm)\\\" >\\n\\t\\t<div class=\\\"form-container\\\">\\n\\t\\t\\t<mat-form-field>\\n\\t\\t    \\t<input matInput placeholder=\\\"Enter bed name\\\" type=\\\"text\\\" formControlName=\\\"bedName\\\">\\n\\t\\t    \\t<mat-icon matSuffix>hotel</mat-icon>\\n\\t\\t    \\t<mat-error *ngFor=\\\"let validation of validationMessages.bedName\\\">\\n\\t\\t    \\t    <mat-error class=\\\"error-message\\\" *ngIf=\\\"editBedForm.get('bedName').hasError(validation.type) && (editBedForm.get('bedName').dirty || editBedForm.get('bedName').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t    \\t</mat-error>\\n\\t\\t  \\t</mat-form-field>\\n\\t\\t</div>\\n\\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" [mat-dialog-close]=\\\"true\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!editBedForm.valid\\\">Submit</button>\\n\\t</form>\\n</mat-dialog-content>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {FormControl,FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-editbed-dialog',\n  templateUrl: './editbed-dialog.component.html',\n  styleUrls: ['./editbed-dialog.component.css']\n})\nexport class EditbedDialogComponent implements OnInit {\n\teditBedForm:FormGroup;\n\teditBedId={'_id':''};\n\teditBedData={'_id':''};\n\n  \tconstructor(private fb: FormBuilder,private admin: AdminService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<EditbedDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) data) { \n  \t\tthis.editBedId = data;\n  \t\tthis.editBedForm = this.fb.group({\n  \t\t\tbedName:[data.bedName,Validators.required]\n  \t\t}) \n  \t}\n\n  \tngOnInit() {\n  \t}\n  \tvalidationMessages = {\n  \t\t'bedName':[\n  \t\t\t{type:'required',message:'Bed name is required'}\n  \t\t],\n  \t}\n  \tonSubmit(){\n  \t\tthis.editBedData = this.editBedForm.value;\n  \t\tthis.editBedData._id = this.editBedId._id;\n  \t\tthis.admin.updateBed(this.editBedData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n  \t\t            this.dialogRef.close('success');\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n\n  \t}\n}\n","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdGRyaXBvLWRpYWxvZy9lZGl0ZHJpcG8tZGlhbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsdUJBQXVCO0NBQ3hCIiwiZmlsZSI6InNyYy9hcHAvZWRpdGRyaXBvLWRpYWxvZy9lZGl0ZHJpcG8tZGlhbG9nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufSJdfQ== */\"","module.exports = \"<h2 mat-dialog-title>Edit Dripo</h2>\\n<mat-dialog-content>\\n\\t<form [formGroup]=\\\"editDripoForm\\\" (ngSubmit)=\\\"onSubmit(editDripoForm)\\\" >\\n\\t\\t<div class=\\\"form-container\\\">\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t  \\t<mat-select placeholder=\\\"Station\\\" formControlName=\\\"stationId\\\">\\n\\t\\t\\t    \\t<mat-option *ngFor=\\\"let station of stations\\\" [value]=\\\"station._id\\\">\\n\\t\\t\\t      \\t\\t{{station.stationName}}\\n\\t\\t\\t    \\t</mat-option>\\n\\t\\t\\t  \\t</mat-select>\\n\\t\\t\\t  \\t<mat-icon matSuffix>important_devices</mat-icon>\\n\\t\\t\\t  \\t<mat-error *ngFor=\\\"let validation of validationMessages.stationId\\\">\\n\\t\\t\\t      \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"editDripoForm.get('stationId').hasError(validation.type) && (editDripoForm.get('stationId').dirty || editDripoForm.get('stationId').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t  \\t</mat-error>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t    <input matInput placeholder=\\\"Enter dripo id\\\" type=\\\"text\\\" formControlName=dripoId>\\n\\t\\t\\t    <mat-icon matSuffix>speaker_phone</mat-icon>\\n\\t\\t\\t    <mat-error *ngFor=\\\"let validation of validationMessages.dripoId\\\">\\n\\t\\t\\t    \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"editDripoForm.get('dripoId').hasError(validation.type) && (editDripoForm.get('dripoId').dirty || editDripoForm.get('dripoId').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t    </mat-error>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</div>\\n\\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" [mat-dialog-close]=\\\"true\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!editDripoForm.valid\\\">Submit</button>\\n\\t</form>\\n</mat-dialog-content>\\n\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {FormControl,FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\n\nexport interface patientGenders {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-editdripo-dialog',\n  templateUrl: './editdripo-dialog.component.html',\n  styleUrls: ['./editdripo-dialog.component.css']\n})\nexport class EditdripoDialogComponent implements OnInit {\n\teditDripoForm:FormGroup;\n\teditDripoId={'_id':''};\n\teditDripoData={'_id':''};\n  stations=[];\n  \tconstructor(private fb: FormBuilder,private admin: AdminService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<EditdripoDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) data) { \n  \t\tthis.editDripoId = data;\n  \t\tthis.editDripoForm = this.fb.group({\n  \t\t\tstationId:[data.stationId,Validators.required],\n  \t\t\tdripoId:[data.dripoId,Validators.required]\n  \t\t}) \n  \t}\n\n  \tvalidationMessages = {\n  \t\t'stationId':[\n  \t\t\t{type:'required',message:'Station name is required'}\n  \t\t],\n  \t\t'dripoId':[\n  \t\t\t{type:'required',message:'dripo id is required'}\n  \t\t]\n  \t}\n\n  \tngOnInit() {\n  \t\tthis.admin.readStation()\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t        \tthis.stations = res.data;\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t}\n\n  \tonSubmit(){\n  \t\tthis.editDripoData = this.editDripoForm.value;\n  \t\tthis.editDripoData._id = this.editDripoId._id;\n  \t\tthis.admin.updateDripo(this.editDripoData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n  \t\t            this.dialogRef.close('success');\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n\n  \t}\n\n}\n","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdGl2c2V0LWRpYWxvZy9lZGl0aXZzZXQtZGlhbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsdUJBQXVCO0NBQ3hCIiwiZmlsZSI6InNyYy9hcHAvZWRpdGl2c2V0LWRpYWxvZy9lZGl0aXZzZXQtZGlhbG9nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufSJdfQ== */\"","module.exports = \"<h2 mat-dialog-title>Edit Ivset</h2>\\n<mat-dialog-content>\\n\\t<form [formGroup]=\\\"editIvsetForm\\\" (ngSubmit)=\\\"onSubmit(editIvsetForm)\\\" >\\n\\t\\t<div class=\\\"form-container\\\">\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t    <input matInput placeholder=\\\"Enter ivset model\\\" type=\\\"text\\\" formControlName=\\\"ivsetModel\\\">\\n\\t\\t\\t    \\t<mat-icon matSuffix>info</mat-icon>\\n\\t\\t\\t    \\t<mat-error *ngFor=\\\"let validation of validationMessages.ivsetModel\\\">\\n\\t\\t\\t    \\t    <mat-error class=\\\"error-message\\\" *ngIf=\\\"editIvsetForm.get('ivsetModel').hasError(validation.type) && (editIvsetForm.get('ivsetModel').dirty || editIvsetForm.get('ivsetModel').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t    \\t</mat-error>\\n\\t\\t\\t  \\t</mat-form-field>\\n\\t\\t\\t<mat-form-field>\\n\\t\\t    \\t<input matInput placeholder=\\\"Enter ivset dpf\\\" type=\\\"text\\\" formControlName=\\\"ivsetDpf\\\">\\n\\t\\t    \\t<mat-icon matSuffix>opacity</mat-icon>\\n\\t\\t    \\t<mat-error *ngFor=\\\"let validation of validationMessages.ivsetDpf\\\">\\n\\t\\t    \\t    <mat-error class=\\\"error-message\\\" *ngIf=\\\"editIvsetForm.get('ivsetDpf').hasError(validation.type) && (editIvsetForm.get('ivsetDpf').dirty || editIvsetForm.get('ivsetDpf').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t    \\t</mat-error>\\n\\t\\t  \\t</mat-form-field>\\n\\t\\t</div>\\n\\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" [mat-dialog-close]=\\\"true\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!editIvsetForm.valid\\\">Submit</button>\\n\\t</form>\\n</mat-dialog-content>\\n\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {FormControl,FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material'\n\n@Component({\n  selector: 'app-editivset-dialog',\n  templateUrl: './editivset-dialog.component.html',\n  styleUrls: ['./editivset-dialog.component.css']\n})\nexport class EditivsetDialogComponent implements OnInit {\n\teditIvsetForm:FormGroup;\n\teditIvsetId={'_id':''};\n\teditIvsetData={'_id':''};\n  \tconstructor(private fb: FormBuilder,private admin: AdminService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<EditivsetDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) data) { \n  \t\tthis.editIvsetId = data;\n  \t\tthis.editIvsetForm = this.fb.group({\n  \t\t\tivsetModel:[data.ivsetModel,Validators.required],\n  \t\t\tivsetDpf:[data.ivsetDpf,Validators.required]\n  \t\t}) \n  \t}\n\n  \tngOnInit() {\n  \t}\n\n  \tvalidationMessages = {\n  \t\t'ivsetModel':[\n  \t\t\t{type:'required',message:'ivset model name is required'}\n  \t\t],\n  \t\t'ivsetDpf':[\n  \t\t\t{type:'required',message:'ivset dpf  is required'}\n  \t\t],\n  \t}\n  \t  \tonSubmit(){\n  \t  \t\tthis.editIvsetData = this.editIvsetForm.value;\n  \t  \t\tthis.editIvsetData._id = this.editIvsetId._id;\n  \t  \t\tthis.admin.updateIvset(this.editIvsetData)\n  \t  \t\t.subscribe(\n  \t  \t\t\tres => {\n  \t  \t\t        if(res.success){\n  \t  \t\t            this.snackbar.open(res.message, 'close')\n  \t  \t\t            this.dialogRef.close('success');\n  \t  \t\t        \t}\n  \t  \t\t        },\n  \t  \t\t    err => {\n  \t  \t\t          console.log(err);\n  \t  \t\t    }\n\n  \t  \t\t)\n\n  \t  \t}\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRwYXRpZW50LWRpYWxvZy9lZGl0cGF0aWVudC1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2 mat-dialog-title>Edit Patient</h2>\\n<mat-dialog-content>\\n\\t\\t<form [formGroup]=\\\"editPatientForm\\\" (ngSubmit)=\\\"onSubmit(editPatientForm,formDirective)\\\"  #formDirective=\\\"ngForm\\\">\\n\\t \\t\\t<div class=\\\"form-container\\\" fxLayout=\\\"column\\\">\\n\\t \\t\\t\\t<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t \\t\\t\\t\\t\\t<mat-form-field fxFlex=\\\"50\\\">\\n\\t \\t\\t\\t\\t\\t    <input matInput placeholder=\\\"Enter patient name\\\" type=\\\"text\\\" formControlName=\\\"patientName\\\">\\n\\t \\t\\t\\t\\t\\t    <mat-icon matSuffix>person</mat-icon>\\n\\t \\t\\t\\t\\t\\t    <mat-error *ngFor=\\\"let validation of validationMessages.patientName\\\">\\n\\t \\t\\t\\t\\t\\t    \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"editPatientForm.get('patientName').hasError(validation.type) && (editPatientForm.get('patientName').dirty || editPatientForm.get('patientName').touched)\\\">{{validation.message}}</mat-error>\\n\\t \\t\\t\\t\\t\\t    </mat-error>\\n\\t \\t\\t\\t\\t\\t </mat-form-field>\\n\\t \\t\\t\\t\\t\\t<mat-form-field fxFlex=\\\"50\\\">\\n\\t \\t\\t\\t\\t\\t  \\t<mat-select placeholder=\\\"Bed\\\" formControlName=\\\"bedId\\\">\\n\\t \\t\\t\\t\\t\\t    \\t<mat-option *ngFor=\\\"let bed of beds\\\" [value]=\\\"bed._id\\\">\\n\\t \\t\\t\\t\\t\\t      \\t\\t\\t{{bed.bedName}}\\n\\t \\t\\t\\t\\t\\t    \\t</mat-option>\\n\\t \\t\\t\\t\\t\\t  \\t</mat-select>\\n\\t \\t\\t\\t\\t\\t  \\t<mat-icon matSuffix>hotel</mat-icon>\\n\\t \\t\\t\\t\\t\\t  \\t<mat-error *ngFor=\\\"let validation of validationMessages.bedId\\\">\\n\\t \\t\\t\\t\\t\\t      \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"editPatientForm.get('bedId').hasError(validation.type) && (editPatientForm.get('bedId').dirty || editPatientForm.get('bedId').touched)\\\">{{validation.message}}</mat-error>\\n\\t \\t\\t\\t\\t\\t  \\t</mat-error>\\n\\t \\t\\t\\t\\t\\t</mat-form-field>\\n\\t \\t\\t\\t</div>\\n\\t \\t\\t\\t<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t \\t\\t\\t\\t<mat-form-field fxFlex=\\\"50\\\">\\n\\t \\t\\t\\t\\t    <input matInput placeholder=\\\"Enter patient age\\\" type=\\\"number\\\" formControlName=\\\"patientAge\\\">\\n\\t \\t\\t\\t\\t    <mat-icon matSuffix>info</mat-icon>\\n\\t \\t\\t\\t\\t</mat-form-field>\\n\\t \\t\\t\\t\\t<mat-form-field fxFlex=\\\"50\\\">\\n\\t \\t\\t\\t\\t    <input matInput placeholder=\\\"Enter patient weight\\\" type=\\\"number\\\" formControlName=\\\"patientWeight\\\">\\n\\t \\t\\t\\t\\t    <mat-icon matSuffix>info</mat-icon>\\n\\t \\t\\t\\t\\t</mat-form-field>\\n\\t \\t\\t\\t</div>\\n\\t \\t\\t\\t<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t \\t\\t\\t\\t<mat-form-field fxFlex=\\\"50\\\">\\n\\t \\t\\t\\t\\t  \\t<mat-select placeholder=\\\"gender\\\" formControlName=\\\"patientGender\\\">\\n\\t \\t\\t\\t\\t    \\t<mat-option *ngFor=\\\"let patientGender of patientGenders\\\" [value]=\\\"patientGender.value\\\">\\n\\t \\t\\t\\t\\t      \\t\\t{{patientGender.viewValue}}\\n\\t \\t\\t\\t\\t    \\t</mat-option>\\n\\t \\t\\t\\t\\t  \\t</mat-select>\\n\\t \\t\\t\\t\\t  \\t<mat-icon matSuffix>account_box</mat-icon>\\n\\t \\t\\t\\t\\t  \\t<mat-error *ngFor=\\\"let validation of validationMessages.patientGender\\\">\\n\\t \\t\\t\\t\\t      \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"editPatientForm.get('patientGender').hasError(validation.type) && (editPatientForm.get('patientGender').dirty || editPatientForm.get('patientGender').touched)\\\">{{validation.message}}</mat-error>\\n\\t \\t\\t\\t\\t  \\t</mat-error>\\n\\t \\t\\t\\t\\t</mat-form-field>\\n\\t \\t\\t\\t\\t<mat-form-field fxFlex=\\\"50\\\">\\n\\t \\t\\t\\t\\t  \\t<mat-select placeholder=\\\"Doctor\\\" formControlName=\\\"doctor\\\">\\n\\t \\t\\t\\t\\t    \\t<mat-option *ngFor=\\\"let doctor of doctors\\\" [value]=\\\"doctor.userName\\\">\\n\\t \\t\\t\\t\\t      \\t\\t\\t{{doctor.userName}}\\n\\t \\t\\t\\t\\t    \\t</mat-option>\\n\\t \\t\\t\\t\\t  \\t</mat-select>\\n\\t \\t\\t\\t\\t  \\t<mat-icon matSuffix>assignment_ind</mat-icon>\\n\\t \\t\\t\\t\\t</mat-form-field>\\n\\t \\t\\t\\t</div>\\n\\t \\t\\t</div>\\n\\t \\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" (click)=\\\"editPatientForm.reset()\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!editPatientForm.valid\\\">Submit</button>\\n\\t \\t</form>\\n</mat-dialog-content>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {FormControl,FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport {NurseService} from '../nurse.service';\nimport { MatSnackBar } from '@angular/material';\nexport interface patientGenders {\n  value: string;\n  viewValue: string;\n}\n@Component({\n  selector: 'app-editpatient-dialog',\n  templateUrl: './editpatient-dialog.component.html',\n  styleUrls: ['./editpatient-dialog.component.css']\n})\nexport class EditpatientDialogComponent implements OnInit {\n\teditPatientForm:FormGroup;\n\teditPatientId={'_id':''};\n\teditPatientData={'_id':''};\n\tbeds=[];\n\tdoctors=[];\n\tpatientGenders: patientGenders[] = [\n\t\t{value: 'male', viewValue: 'Male'},\n\t    {value: 'female', viewValue: 'Female'}\n\t  ];\n\tconstructor(private fb: FormBuilder,private nurse: NurseService,public snackbar: MatSnackBar,\n    private dialogRef: MatDialogRef<EditpatientDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) {\n\t\tthis.editPatientId = data;\n\t\tthis.editPatientForm = this.fb.group({\n\t\t\tpatientName:[data.patientName,Validators.required],\n\t\t\tbedId:[data.bedId,Validators.required],\n\t\t\tpatientAge:[data.patientAge],\n\t\t\tpatientWeight:[data.patientWeight],\n\t\t\tpatientGender:[data.patientGender,Validators.required],\n\t\t\tdoctor:[data.doctor]\n\t\t}) \n    }\n    validationMessages = {\n    \t'patientName':[\n    \t\t{type:'required',message:'Patient name is required'}\n    \t],\n    \t'bedId':[\n    \t\t{type:'required',message:'Bed name is required'},\n    \t],\n    \t'patientGender':[\n    \t\t{type:'required',message:'Patient gender is required'}\n    \t]\n\n    }\n\n  \tngOnInit() {\n\n  \t\t\tthis.nurse.readBed()\n  \t\t\t.subscribe(\n  \t\t\t\tres => {\n  \t\t\t\t       if(res.success){\n  \t\t\t\t        this.beds = res.data;\n  \t\t\t\t        }\n  \t\t           else{\n  \t\t             this.snackbar.open(res.message, 'close')\n  \t\t           }\n  \t\t\t\t       },\n  \t\t\t\t   err => {\n  \t\t\t\t         console.log(err);\n  \t\t\t\t   }\n\n  \t\t\t)\n\n  \t\t\tthis.nurse.readDoctor()\n  \t\t\t.subscribe(\n  \t\t\t\tres => {\n  \t\t\t\t\t\tif(res.success){\n  \t\t\t\t\t\t      this.doctors = res.data;\n  \t\t\t\t\t\t}\n  \t\t\t\t        \n  \t\t\t\t\t\t},\n  \t\t\t\t\t\t err => {\n  \t\t\t\t\t\t       console.log(err);\n  \t\t\t\t\t\t }\n\n  \t\t\t)\n\n  \t}\n\n  \tonSubmit(){\n  \t\tthis.editPatientData = this.editPatientForm.value;\n  \t\tthis.editPatientData._id = this.editPatientId._id;\n  \t\tthis.nurse.updatePatient(this.editPatientData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n  \t\t            this.dialogRef.close('success');\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n\n  \t}\n\n}\n","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdHN0YXRpb24tZGlhbG9nL2VkaXRzdGF0aW9uLWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLHVCQUF1QjtDQUN4QiIsImZpbGUiOiJzcmMvYXBwL2VkaXRzdGF0aW9uLWRpYWxvZy9lZGl0c3RhdGlvbi1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59Il19 */\"","module.exports = \"<h2 mat-dialog-title>Edit Station</h2>\\n<mat-dialog-content>\\n\\t<form [formGroup]=\\\"editStationForm\\\" (ngSubmit)=\\\"onSubmit(editStationForm)\\\" >\\n\\t\\t<div class=\\\"form-container\\\">\\n\\t\\t\\t<mat-form-field>\\n\\t\\t    \\t<input matInput placeholder=\\\"Enter station name\\\" type=\\\"text\\\" formControlName=\\\"stationName\\\">\\n\\t\\t    \\t<mat-icon matSuffix>important_devices</mat-icon>\\n\\t\\t    \\t<mat-error *ngFor=\\\"let validation of validationMessages.stationName\\\">\\n\\t\\t    \\t    <mat-error class=\\\"error-message\\\" *ngIf=\\\"editStationForm.get('stationName').hasError(validation.type) && (editStationForm.get('stationName').dirty || editStationForm.get('stationName').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t    \\t</mat-error>\\n\\t\\t  \\t</mat-form-field>\\n\\t\\t</div>\\n\\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" [mat-dialog-close]=\\\"true\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!editStationForm.valid\\\">Submit</button>\\n\\t</form>\\n</mat-dialog-content>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {FormControl,FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-editstation-dialog',\n  templateUrl: './editstation-dialog.component.html',\n  styleUrls: ['./editstation-dialog.component.css']\n})\nexport class EditstationDialogComponent implements OnInit {\n\teditStationForm:FormGroup;\n\teditStationId={'_id':''};\n\teditStationData={'_id':''};\n  \tconstructor(private fb: FormBuilder,private admin: AdminService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<EditstationDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) data) { \n  \t\tthis.editStationId = data;\n  \t\tthis.editStationForm = this.fb.group({\n  \t\t\tstationName:[data.stationName,Validators.required]\n  \t\t}) \n\n  \t}\n\n  \tngOnInit() {\n  \t}\n\n  \tvalidationMessages = {\n  \t\t'stationName':[\n  \t\t\t{type:'required',message:'Station name is required'}\n  \t\t],\n  \t}\n  \tonSubmit(){\n  \t\tthis.editStationData = this.editStationForm.value;\n  \t\tthis.editStationData._id = this.editStationId._id;\n  \t\tthis.admin.updateStation(this.editStationData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n  \t\t            this.dialogRef.close('success');\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n\n  \t}\n\n\n}\n","module.exports = \".Form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdHVzZXItZGlhbG9nL2VkaXR1c2VyLWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLHVCQUF1QjtDQUN4QiIsImZpbGUiOiJzcmMvYXBwL2VkaXR1c2VyLWRpYWxvZy9lZGl0dXNlci1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5Gb3JtLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59Il19 */\"","module.exports = \"<h2 mat-dialog-title>Change password</h2>\\n<mat-dialog-content>\\n\\t<form [formGroup]=\\\"changePasswordForm\\\" (ngSubmit)=\\\"onSubmit(changePasswordForm)\\\" >\\n\\t\\t<div class=\\\"Form-container\\\">\\n\\t\\t\\t<mat-form-field>\\n\\t\\t    \\t<input matInput placeholder=\\\"Enter a password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\n\\t\\t    \\t<mat-icon matSuffix>vpn_key</mat-icon>\\n\\t\\t    \\t<mat-error *ngFor=\\\"let validation of validationMessages.password\\\">\\n\\t\\t    \\t    <mat-error class=\\\"error-message\\\" *ngIf=\\\"changePasswordForm.get('password').hasError(validation.type) && (changePasswordForm.get('password').dirty || changePasswordForm.get('password').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t    \\t</mat-error>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<mat-form-field>\\n\\t\\t    \\t<input matInput placeholder=\\\"Confirm password\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\">\\n\\t\\t    \\t<mat-icon matSuffix>vpn_key</mat-icon>\\n\\t\\t    \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"changePasswordForm.controls.confirmPassword.invalid\\\">Password missmatch</mat-error>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</div>\\n\\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" (click)=\\\"close()\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!changePasswordForm.valid\\\">Submit</button>\\n\\t</form>\\n</mat-dialog-content>\\n\\n\\n\\n\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {FormControl,FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {passValidator} from '../validator';\nimport {AdminService} from '../admin.service';\nimport { MatSnackBar } from '@angular/material';\n\n\n\n\n\n@Component({\n  selector: 'app-edituser-dialog',\n  templateUrl: './edituser-dialog.component.html',\n  styleUrls: ['./edituser-dialog.component.css']\n})\nexport class EdituserDialogComponent implements OnInit {\n\tchangePasswordForm:FormGroup;\n\teditUserId={'id':''};\n\teditUserData={'_id':''};\n  constructor(private fb: FormBuilder,private admin: AdminService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<EdituserDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) data) {\n  \t\t\tthis.editUserId = data;\n  \t\t\tthis.changePasswordForm = this.fb.group({\n  \t\t\tpassword:['',Validators.compose([Validators.required,Validators.minLength(5)])],\n  \t\t\tconfirmPassword:['',passValidator]\n  \t\t\t}) \n\n  \t\t\t//Observable to update validator if password field changed again\n  \t\t\tthis.changePasswordForm.controls.password.valueChanges\n  \t\t\t    .subscribe(x => this.changePasswordForm.controls.confirmPassword.updateValueAndValidity())\n\n         }\n\n  \tngOnInit() {\n  \t}\n\n  \tclose(){\n  \t    this.dialogRef.close();\n  \t}\n  \tonSubmit(){\n  \t\tthis.editUserData = this.changePasswordForm.value;\n  \t\tthis.editUserData._id = this.editUserId.id;\n  \t\tthis.admin.updateUser(this.editUserData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            this.snackbar.open(res.message, 'close')\n  \t\t            this.dialogRef.close();\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n\n  \t}\n\n    validationMessages = {\n    \t'password': [\n      \t    { type: 'required', message: 'Password is required' },\n      \t    { type: 'minlength', message: 'Password must be at least 5 characters long' },\n    \t]\n    }\n\n}\n","module.exports = \".Form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLHVCQUF1QjtDQUN4QiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5Gb3JtLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59Il19 */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" [ngStyle]=\\\"{background: 'url(../../assets/images/bg.jpg)'}\\\"  style=\\\"height: 100%;width: 100%\\\">\\n    <mat-card fxFlex=\\\"40\\\" fxFlex.xs=\\\"80\\\">\\n        <mat-card-header>\\n            <mat-card-title>Request Password reset link</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n                <form [formGroup]=\\\"requestForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"Form-container\\\">\\n                    <mat-form-field>\\n                        <input matInput placeholder=\\\"Enter your registered email\\\"  type=\\\"text\\\" formControlName=\\\"userName\\\">\\n                        <mat-icon matSuffix>email</mat-icon>\\n                    </mat-form-field>\\n                    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!requestForm.valid\\\">Request</button>\\n                </form>\\n        </mat-card-content>\\n        <mat-card-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"height: 100%;width: 100%\\\">\\n            <button mat-button color=\\\"accent\\\" routerLink=\\\"/login\\\">Login</button>\\n        </mat-card-actions>\\n    </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl,FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport {AuthService} from '../auth.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(private fb: FormBuilder,private auth: AuthService,private router:Router,public snackbar: MatSnackBar) { }\n\n  ngOnInit() {\n  }\n\n  requestData = {};\n  requestForm = this.fb.group({\n  \tuserName:['',Validators.compose([Validators.required,Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])]\n  })\n\n\n  onSubmit() {\n    this.requestData = this.requestForm.value;\n    this.auth.forgotPassword(this.requestData)\n    .subscribe(\n    \tres => {\n            if(res.success){\n            \tthis.snackbar.open(res.message, 'close')\n            }\n            else{\n            \tthis.snackbar.open(res.message, 'close')\n            }\n            },\n        err => {\n              console.log(err);\n        }\n\n    )\n\n  }\n\n}\n","module.exports = \".loginForm-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.login-card {\\n\\twidth:600px;\\n  max-width: 400px;\\n  align-items: center;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCx1QkFBdUI7Q0FDeEI7O0FBRUQ7Q0FDQyxZQUFZO0VBQ1gsaUJBQWlCO0VBQ2pCLG9CQUFvQjtDQUNyQiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW5Gb3JtLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5sb2dpbi1jYXJkIHtcblx0d2lkdGg6NjAwcHg7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cblxuIl19 */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" [ngStyle]=\\\"{background: 'url(../../assets/images/bg.jpg)'}\\\"  style=\\\"height: 100%;width: 100%\\\">\\n    <mat-card fxFlex=\\\"40\\\" fxFlex.xs=\\\"80\\\">\\n        <mat-card-header>\\n            <mat-card-title>Login</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n                <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"loginForm-container\\\">\\n                    <mat-form-field>\\n                        <input matInput placeholder=\\\"Enter your registered email\\\"  type=\\\"text\\\" formControlName=\\\"userName\\\">\\n                        <mat-icon matSuffix>email</mat-icon>\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input matInput placeholder=\\\"Enter password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\n                        <mat-icon matSuffix>vpn_key</mat-icon>\\n                    </mat-form-field>\\n                    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n                </form>\\n        </mat-card-content>\\n        <mat-card-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"height: 100%;width: 100%\\\">\\n            <button mat-button color=\\\"accent\\\" routerLink=\\\"/forgotpassword\\\">Forgot Password</button>\\n        </mat-card-actions>\\n    </mat-card>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl,FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport {AuthService} from '../auth.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private fb: FormBuilder,private auth: AuthService,private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  loginData = {};\n  loginForm = this.fb.group({\n  \tuserName:['',Validators.compose([Validators.required,Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])],\n  \tpassword:['',Validators.compose([Validators.required,Validators.minLength(5)])]\n  })\n\n  onSubmit() {\n    this.loginData = this.loginForm.value;\n    this.auth.loginUser(this.loginData)\n    \t.subscribe(\n    \t\tres => {\n          if(res.success==true && res.permission == 'admin'){\n            localStorage.setItem('token',res.token)\n            this.router.navigate(['/admin/home'])\n          }\n          else if(res.success==true && res.permission == 'nurse'){\n            localStorage.setItem('token',res.token)\n            this.router.navigate(['/nurse/selectstation'])\n          }\n          else{\n            this.router.navigate(['/login'])\n          }\n    \t\t\t\n    \t\t},\n    \t\terr => console.log(err)\n\n    \t)\n  }\n\n\n\n\n}\n","module.exports = \".action-btn{\\n\\tposition: fixed;\\n\\tbottom: 1rem;\\n\\tright:1rem;\\n}\\n\\n@media(min-width: 1024px) {\\n   .action-btn {\\n    bottom: 1.5rem;\\n    right: 1.5rem;\\n  }\\n}\\n\\n.scrollable {\\n  overflow-y: scroll;\\n}\\n\\n.arrange {\\n  display: -webkit-flex; /* Safari */\\n  -webkit-align-items: center; /* Safari 7.0+ */\\n  vertical-align: middle;\\n  display: flex;\\n  align-items: center;\\n  text-align: center;\\n\\n}\\n\\n.rotate-90 {\\n    -webkit-transform: rotate(90deg);\\n    transform: rotate(90deg);\\n}\\n\\n.slick-list{\\n  height: 100% !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbnVyc2UtaG9tZS9udXJzZS1ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxnQkFBZ0I7Q0FDaEIsYUFBYTtDQUNiLFdBQVc7Q0FDWDs7QUFFRDtHQUNHO0lBQ0MsZUFBZTtJQUNmLGNBQWM7R0FDZjtDQUNGOztBQUNEO0VBQ0UsbUJBQW1CO0NBQ3BCOztBQUVEO0VBQ0Usc0JBQXNCLENBQUMsWUFBWTtFQUNuQyw0QkFBNEIsQ0FBQyxpQkFBaUI7RUFDOUMsdUJBQXVCO0VBQ3ZCLGNBQWM7RUFDZCxvQkFBb0I7RUFDcEIsbUJBQW1COztDQUVwQjs7QUFFRDtJQUNJLGlDQUFpQztJQUlqQyx5QkFBeUI7Q0FDNUI7O0FBRUQ7RUFDRSx3QkFBd0I7Q0FDekIiLCJmaWxlIjoic3JjL2FwcC9udXJzZS1ob21lL251cnNlLWhvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3Rpb24tYnRue1xuXHRwb3NpdGlvbjogZml4ZWQ7XG5cdGJvdHRvbTogMXJlbTtcblx0cmlnaHQ6MXJlbTtcbn1cblxuQG1lZGlhKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAuYWN0aW9uLWJ0biB7XG4gICAgYm90dG9tOiAxLjVyZW07XG4gICAgcmlnaHQ6IDEuNXJlbTtcbiAgfVxufVxuLnNjcm9sbGFibGUge1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbi5hcnJhbmdlIHtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4OyAvKiBTYWZhcmkgKi9cbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyOyAvKiBTYWZhcmkgNy4wKyAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbn1cblxuLnJvdGF0ZS05MCB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAtby10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xufVxuXG4uc2xpY2stbGlzdHtcbiAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG59Il19 */\"","module.exports = \"\\t\\n <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" style=\\\"height: 100%;width: 100%; margin-top: 10px;\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n \\t<div fxFlex=\\\"80\\\" fxLayoutGap=\\\"10px\\\" fxFlex.xs=\\\"50\\\" class=\\\"scrollable\\\">\\n \\t\\t<mat-grid-list [cols]=\\\"cols\\\" (window:resize)=\\\"onResize($event)\\\" rowHeight=\\\"240px\\\" gutterSize=\\\"10px\\\">\\n \\t\\t  <mat-grid-tile\\n \\t\\t      *ngFor=\\\"let task of activeTasks\\\"\\n \\t\\t      [colspan]=\\\"1\\\"\\n \\t\\t      [rowspan]=\\\"1\\\" >\\n\\t\\t\\t\\t<mat-card fxLayout=\\\"column\\\" style=\\\"height: 100%;width: 100%;padding: 0px;\\\" matTooltip=\\\"Click to delete task\\\">\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"10\\\" style=\\\"background-color: #616161\\\" fxLayout=\\\"row\\\" (click)=\\\"openTaskActivity(task)\\\">\\n\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"15\\\"></div>\\n\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"15\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon style=\\\"color: white;\\\">network_wifi</mat-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"40\\\"></div>\\n\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"15\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon style=\\\"color: white;\\\">battery_std</mat-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"15\\\" style=\\\"font-size: 14px;color: white;\\\">{{task.deviceCharge}}%</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"height: 100%;width: 100%\\\" style=\\\"background-color: #212121;color: white;\\\" (click)=\\\"openTaskActivity(task)\\\">\\n\\t\\t\\t\\t\\t\\t<h3 fxFlex=\\\"30\\\">{{task._bed.bedName}}</h3>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div fxFlex (click)=\\\"openTaskActivity(task)\\\">\\n\\t\\t\\t\\t\\t\\t<mat-progress-bar [value]=\\\"task.percentage\\\"></mat-progress-bar>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"50\\\" style=\\\"background-color: #616161;height: 100%;width: 100%\\\" (click)=\\\"openTaskActivity(task)\\\">\\n\\t\\t\\t\\t\\t\\t<ngx-slick  class=\\\"carousel\\\" #slickModal=\\\"slick-modal\\\" [config]=\\\"slideConfig\\\" style=\\\"height: 100%;width: 100%;\\\" >\\n\\t\\t\\t\\t\\t\\t\\t<div fxLayout=\\\"column\\\" ngxSlickItem class=\\\"slide\\\" style=\\\"height: 100%;width: 100%;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"10\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"color: #EEEEEE;padding-top: 10px;padding-left: 8px;\\\">Rate</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"80\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"height: 100%;width: 100%;padding-top: 5px;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"70\\\"  style=\\\"color: white;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"padding: 0px;margin:0px;font-size: 40px\\\">{{task.rate}} / {{task._medication.medicineRate}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"10\\\" style=\\\"color: white;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"75\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"25\\\">ml/hr</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div fxLayout=\\\"column\\\" ngxSlickItem class=\\\"slide\\\" style=\\\"height: 100%;width: 100%;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"10\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"color: #EEEEEE;padding-top: 10px;padding-left: 8px;\\\">Remaining Time</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"80\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"height: 100%;width: 100%;padding-top: 30px;\\\" style=\\\"color: white;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"margin:0px;font-size: 40px;padding-left: 8px;\\\">{{task.timeRemaining /60 | number:'1.0-0'}}  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"padding-left: 10px;padding-top: 7px;\\\">Hrs</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"padding: 0px;margin:0px;font-size: 40px\\\">{{task.timeRemaining%60}} \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"padding-left: 10px;padding-top: 7px;\\\">Mins</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"10\\\" style=\\\"color: white;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"70\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"30\\\">Approx</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div fxLayout=\\\"column\\\" ngxSlickItem class=\\\"slide\\\" style=\\\"height: 100%;width: 100%;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"10\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"color: #EEEEEE;padding-top: 10px;padding-left: 8px;\\\">Volume</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"80\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"height: 100%;width: 100%;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"70\\\" style=\\\"color: white;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"padding: 0px;margin:0px;font-size: 40px;padding-top: 5px;\\\">{{task.infusedVolume}} / {{task._medication.medicineVolume}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"10\\\" style=\\\"color: white;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"85\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"15\\\">ml</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ngx-slick>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"20\\\" *ngIf=\\\"task.status=='ongoing'\\\" style=\\\"height: 100%;width: 100%\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button color=\\\"primary\\\"  style=\\\"font-size:17px;height: 100%;width: 100%\\\">{{task.infusionStatus}}</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"20\\\"  style=\\\"height: 100%;width: 100%\\\" *ngIf=\\\"task.status=='alerted'\\\" matTooltip=\\\"Click to acknoledge\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button color=\\\"accent\\\" (click)=\\\"acknowledge(task);\\\" style=\\\"height: 100%;width:100%;\\\">{{task.infusionStatus}}</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</mat-card>\\n \\t\\t  </mat-grid-tile>\\n \\t\\t</mat-grid-list>\\t\\t\\n \\t</div>\\n \\t<div fxFlex=\\\"20\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"50\\\" fxLayoutGap=\\\"10px\\\">\\n \\t\\t<mat-card fxFlex=\\\"50\\\" class=\\\"scrollable\\\" *ngIf=\\\"delayedTaskFlag\\\" style=\\\"padding: 3px\\\">\\n \\t\\t\\t<b *ngIf=\\\"delayedTaskFlag\\\"  style=\\\"color: #616161;\\\">Delayed Tasks</b>\\n \\t\\t\\t<div fxLayout=\\\"column\\\" style=\\\"padding-bottom: 3px;\\\" *ngFor=\\\"let delayedTask of delayedTasks\\\" (click)=\\\"openTaskActivity(delayedTask)\\\">\\n \\t\\t\\t\\t<mat-card fxLayout=\\\"row\\\" style=\\\"padding: 0px;\\\" matTooltip=\\\"Click to delete task\\\">\\n \\t\\t\\t\\t\\t<div fxFlex=\\\"27\\\" style=\\\"background-color:#E91E63;padding: 10px;color: white;\\\"><b>{{delayedTask._bed.bedName}}</b></div>\\n \\t\\t\\t\\t\\t<div fxFlex=\\\"50\\\" style=\\\"background-color:#757575;padding: 10px;color: white;color: white;font-size: 12px\\\">{{delayedTask._medication.medicineName}}</div>\\n \\t\\t\\t\\t\\t<div fxFlex=\\\"23\\\" style=\\\"background-color:#616161;padding: 10px;color: white;\\\">{{delayedTask.timeIn12}}</div>\\n \\t\\t\\t\\t</mat-card> \\n \\t\\t\\t</div>\\n \\t\\t</mat-card>\\n \\t\\t<mat-card fxFlex=\\\"50\\\" class=\\\"scrollable\\\" style=\\\"padding: 3px\\\"  *ngIf=\\\"upcomingTaskFlag\\\">\\n \\t\\t\\t<b *ngIf=\\\"upcomingTaskFlag\\\" style=\\\"color: #616161;\\\">Upcoming Tasks</b>\\n \\t\\t\\t<div fxLayout=\\\"column\\\" style=\\\"padding-bottom: 3px;\\\" *ngFor=\\\"let upcomingTask of upcomingTasks\\\" (click)=\\\"openTaskActivity(upcomingTask)\\\">\\n\\t\\t\\t\\t<mat-card fxLayout=\\\"row\\\" style=\\\"padding: 0px;\\\" matTooltip=\\\"Click to delete task\\\">\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"27\\\" style=\\\"background-color:#3F51B5;padding: 10px;color: white;\\\"><b>{{upcomingTask._bed.bedName}}</b></div>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"50\\\" style=\\\"background-color:#757575;padding: 10px;color: white;font-size: 12px;\\\">{{upcomingTask._medication.medicineName}}</div>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"23\\\" style=\\\"background-color: #616161;padding: 10px;color: white;\\\">{{upcomingTask.timeIn12}}</div>\\n\\t\\t\\t\\t</mat-card> \\n \\t\\t\\t</div>\\n \\t\\t</mat-card>\\n \\t</div>\\n </div>\\n\\n\\n <button mat-fab color=\\\"primary\\\" class=\\\"action-btn\\\" (click)=\\\"openAddDialog()\\\"><mat-icon>add</mat-icon></button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AddtaskDialogComponent } from '../addtask-dialog/addtask-dialog.component';\nimport {NurseService} from '../nurse.service';\nimport { MatSnackBar } from '@angular/material';\nimport {MatDialog, MatDialogConfig} from \"@angular/material\";\nimport { TaskactivityDialogComponent } from '../taskactivity-dialog/taskactivity-dialog.component';\nimport {SocketService} from '../socket.service';\nimport {Observable} from 'rxjs';\nimport {map,takeWhile,startWith} from \"rxjs/internal/operators\";\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\n\n\n\n@Component({\n  selector: 'app-nurse-home',\n  templateUrl: './nurse-home.component.html',\n  styleUrls: ['./nurse-home.component.css']\n})\nexport class NurseHomeComponent implements OnInit {\n\tmessageText: string;\n\tactiveTasks: Array<any>=[];\n  iterates=[];\n  upcomingTasks=[];\n  upcomingTaskFlag = false;\n  delayedTasks=[];\n  delayedTaskFlag = false;\n  interval: any;\n  public cols;\n  slideConfig = {\n      \"slidesToShow\": 1,\n      \"slidesToScroll\": 1,\n      \"dots\": false,\n      \"infinite\": true,\n      \"autoplay\": true,\n      \"autoplaySpeed\": 1500\n  };  \t\n  constructor(private observableMedia: ObservableMedia,private nurse: NurseService,public snackbar: MatSnackBar,private dialog: MatDialog,private socketService:SocketService) { \n\n  \t}\n\n    onResize(event) {\n      this.cols = (event.target.innerWidth <= 400) ? 2 : 5;\n    }\n\n  \tngOnInit() {\n      this.cols = (window.innerWidth <= 400) ? 2 : 5;\n      //interval function to change task from upcoming to delayed\n      this.interval = setInterval(() => {\n        var currentMin=new Date().getMinutes();\n        if(currentMin == 59)\n         {\n          this.nurse.readUpcomingTask()\n            .subscribe(\n              res => {\n                  if(res.success){\n                      this.upcomingTasks = res.data;\n                      this.upcomingTaskFlag = true;\n                  }\n                  else{\n                      console.log(res.message);\n                  }\n              },\n              err => {\n                  console.log(err);\n              }\n          )\n\n          this.nurse.readDelayedTask()\n            .subscribe(\n              res => {\n                  if(res.success){\n                      this.delayedTasks = res.data;\n                      this.delayedTaskFlag = true;\n                  }\n                  else{\n                      console.log(res.message);\n                  }\n              },\n              err => {\n                  console.log(err);\n              }\n          ) \n         }\n         }, 60000);\n         \n        \n\n      this.nurse.readUpcomingTask()\n        .subscribe(\n          res => {\n              if(res.success){\n                  this.upcomingTasks = res.data;\n                  this.upcomingTaskFlag = true;\n              }\n              else{\n                  console.log(res.message);\n              }\n          },\n          err => {\n              console.log(err);\n          }\n      )\n\n      this.nurse.readDelayedTask()\n        .subscribe(\n          res => {\n              if(res.success){\n                  this.delayedTasks = res.data;\n                  this.delayedTaskFlag = true;\n              }\n              else{\n                  console.log(res.message);\n              }\n          },\n          err => {\n              console.log(err);\n          }\n      )\n\n\n      this.nurse.readActiveTask()\n        .subscribe(\n          res => {\n              if(res.success){\n                  this.activeTasks = res.data;\n              }\n              else{\n                  console.log(res.message);\n              }\n          },\n          err => {\n              console.log(err);\n          }\n      )\n\n          this.socketService.onMessage().subscribe(msg => {\n              if(msg.infusionStatus == 'Start'){\n                var indexValue = null;\n                this.activeTasks.forEach(function (task,index) {\n                    if(msg._id == task._id){\n                      indexValue = index;\n                    }\n                });\n                if(indexValue == null){\n                  var length=this.activeTasks.push(msg);\n                }\n              }\n\n              else if(msg.infusionStatus == 'Infusing'){\n                this.activeTasks.forEach(function (task,index) {\n                    if(msg._id == task._id){\n                      task.rate=msg.rate;\n                      task.status='ongoing';\n                      task.infusionStatus='Infusing';\n                      task.infusedVolume=msg.infusedVolume;\n                      task.timeRemaining=msg.timeRemaining;\n                      task.percentage=msg.percentage;\n                      task.deviceCharge = msg.deviceCharge;\n                      task.commonTopic = msg.commonTopic;\n                    }\n                });\n              }\n\n              else if(msg.infusionStatus == 'Block' || msg.infusionStatus == 'Rate Error'\n                ||msg.infusionStatus == 'Almost Done' || msg.infusionStatus =='Done'){\n                var indexValue;\n                this.activeTasks.forEach(function (task,index) {\n                    if(msg._id == task._id){\n                      indexValue = index;\n                    }\n                });\n                var removed = this.activeTasks.splice(indexValue,1);\n                var length = this.activeTasks.unshift(msg);\n              }\n\n              else if(msg.infusionStatus == 'Stop'){\n                var indexValue;\n                this.activeTasks.forEach(function (task,index) {\n                    if(msg._id == task._id){\n                      indexValue = index;\n                    }\n                });\n                var removed = this.activeTasks.splice(indexValue,1);\n              }\n\n              else if(msg.infusionStatus == 'Error_ACK'){\n                this.activeTasks.forEach(function (task,index) {\n                    if(msg._id == task._id){\n                      task.status='ongoing';\n                      task.infusionStatus='Infusing'\n                      task.rate=msg.rate;\n                      task.infusedVolume=msg.infusedVolume;\n                      task.timeRemaining=msg.timeRemaining;\n                      task.percentage=msg.percentage;\n                      task.deviceCharge = msg.deviceCharge;\n                      task.commonTopic = msg.commonTopic;\n                    }\n                });\n              }\n\n            });\n  \t}\n\n\n  \topenAddDialog() {\n  \t        const dialogConfig = new MatDialogConfig();\n  \t        dialogConfig.autoFocus = true;\n  \t        dialogConfig.height= '400px';\n  \t        dialogConfig.width='600px';\n\n  \t        let dialogRef = this.dialog.open(AddtaskDialogComponent, dialogConfig);\n  \t        dialogRef.afterClosed().subscribe(result => {\n  \t          if(result == 'success'){\n                console.log(\"closed\");\n                this.nurse.readUpcomingTask()\n  \t          \t.subscribe(\n  \t          \t\tres => {\n  \t          \t        if(res.success){\n                          this.upcomingTasks = res.data;\n                          this.upcomingTaskFlag = true;\n  \t          \t        \t}\n  \t          \t        },\n  \t          \t    err => {\n  \t          \t          console.log(err);\n  \t          \t    }\n\n  \t          \t)\n  \t          }\n  \t        });\n  \t}\n    openTaskActivity(task){\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.autoFocus = true;\n      dialogConfig.height= '200px';\n      dialogConfig.width='500px';\n      dialogConfig.data = {\n              _id: task._id,\n          };\n      let dialogRef = this.dialog.open(TaskactivityDialogComponent, dialogConfig);\n                dialogRef.afterClosed().subscribe(result => {\n                  if(result == 'success'){\n                    this.nurse.readUpcomingTask()\n                    .subscribe(\n                      res => {\n                            if(res.success){\n                              this.upcomingTasks = res.data;\n                              this.upcomingTaskFlag = true;\n                              }\n                            },\n                        err => {\n                              console.log(err);\n                        }\n\n                    )\n                    this.nurse.readDelayedTask()\n                      .subscribe(\n                        res => {\n                            if(res.success){\n                                this.delayedTasks = res.data;\n                                this.delayedTaskFlag = true;\n                            }\n                            else{\n                                console.log(res.message);\n                            }\n                        },\n                        err => {\n                            console.log(err);\n                        }\n                    )\n                    this.nurse.readActiveTask()\n                      .subscribe(\n                        res => {\n                            if(res.success){\n                                this.activeTasks = res.data;\n                            }\n                            else{\n                                console.log(res.message);\n                            }\n                        },\n                        err => {\n                            console.log(err);\n                        }\n                    )\n                  }\n                });\n\n    }\n    acknowledge(task){\n      this.socketService.sendMessage(task.topic+'mon',task._id+'-'+'Block_ACK'+'-'+task.rate+'-'+task.infusedVolume+'-'+task.timeRemaining+'-'+task.totalVolume+'-'+task.deviceCharge);\n      this.socketService.sendMessage(task.topic+'staAck','STA_ACK');\n\n    }\n\n\n}\n","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.scrollable {\\n  overflow-y: scroll;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbnVyc2UtbXBhdGllbnQvbnVyc2UtbXBhdGllbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCx1QkFBdUI7Q0FDeEI7O0FBRUQ7RUFDRSxtQkFBbUI7Q0FDcEIiLCJmaWxlIjoic3JjL2FwcC9udXJzZS1tcGF0aWVudC9udXJzZS1tcGF0aWVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnNjcm9sbGFibGUge1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cblxuIl19 */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column-reverse wrap\\\" style=\\\"height: 100%;width: 100%; margin-top: 10px;\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0px\\\">\\n\\t<div fxFlex=\\\"70\\\" fxFlex.xs=\\\"25\\\" class=\\\"scrollable\\\">\\n\\t\\t<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\n\\t\\t\\t<mat-card fxLayout=\\\"row\\\" *ngFor=\\\"let patient of patients |filter:term\\\">\\n\\t\\t\\t\\t<div fxFlex=\\\"40\\\" fxFlex.xs=\\\"60\\\">{{patient.patientName}}  <br><b>{{patient.bedName}}</b></div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" [routerLink]=\\\"['/nurse/patienthistory',patient._id]\\\" style=\\\"color: green\\\"  class=\\\"mat-button\\\">Info</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: green\\\" [routerLink]=\\\"['/patienthistory',5]\\\"  class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>info</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" *ngIf=\\\"patient.patientStatus == 'active'\\\"  fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" style=\\\"color: blue\\\" (click)=\\\"openEditDialog(patient)\\\" class=\\\"mat-button\\\">Edit</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" *ngIf=\\\"patient.patientStatus == 'active'\\\"  fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: blue\\\" (click)=\\\"openEditDialog(patient)\\\" class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" *ngIf=\\\"patient.patientStatus == 'active'\\\" fxHide.xs=\\\"true\\\" fxHide.sm=\\\"true\\\" style=\\\"color: red\\\" (click)=\\\"openDischargeDialog(patient)\\\" class=\\\"mat-button\\\">Discharge</div>\\n\\t\\t\\t\\t<div fxFlex=\\\"20\\\" *ngIf=\\\"patient.patientStatus == 'active'\\\" fxHide.xs=\\\"false\\\" fxHide.sm=\\\"false\\\" fxHide.md=\\\"true\\\" fxHide.lg=\\\"true\\\" fxHide.xl=\\\"true\\\" style=\\\"color: red\\\" (click)=\\\"openDischargeDialog(patient)\\\" class=\\\"mat-button\\\">\\n\\t\\t\\t\\t\\t<mat-icon>close</mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div fxFlex=\\\"30\\\" fxFlex.xs=\\\"75\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n\\t\\t<div fxFlex=\\\"75\\\" fxFlex.xs=\\\"100\\\">\\n\\t\\t\\t<mat-card>\\n\\t\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t  \\t<mat-card-title>Add Patients</mat-card-title>\\n\\t\\t\\t\\t</mat-card-header>\\n\\t\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t\\t<form [formGroup]=\\\"createPatientForm\\\" (ngSubmit)=\\\"onSubmit(createPatientForm,formDirective)\\\"  #formDirective=\\\"ngForm\\\">\\n\\t\\t\\t\\t \\t\\t<div class=\\\"form-container\\\">\\n\\t\\t\\t\\t \\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t \\t    \\t\\t<input matInput placeholder=\\\"Enter patient name\\\" type=\\\"text\\\" formControlName=\\\"patientName\\\">\\n\\t\\t\\t\\t \\t    \\t\\t<mat-icon matSuffix>person</mat-icon>\\n\\t\\t\\t\\t \\t    \\t\\t<mat-error *ngFor=\\\"let validation of validationMessages.patientName\\\">\\n\\t\\t\\t\\t \\t    \\t    \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createPatientForm.get('patientName').hasError(validation.type) && (createPatientForm.get('patientName').dirty || createPatientForm.get('patientName').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t \\t    \\t\\t</mat-error>\\n\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t<mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t<mat-select placeholder=\\\"Bed\\\" formControlName=\\\"bedId\\\">\\n\\t\\t\\t\\t \\t  \\t\\t    \\t<mat-option *ngFor=\\\"let bed of beds\\\" [value]=\\\"bed._id\\\">\\n\\t\\t\\t\\t \\t  \\t\\t      \\t\\t\\t{{bed.bedName}}\\n\\t\\t\\t\\t \\t  \\t\\t    \\t</mat-option>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t</mat-select>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t<mat-icon matSuffix>hotel</mat-icon>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t<mat-error *ngFor=\\\"let validation of validationMessages.bedId\\\">\\n\\t\\t\\t\\t \\t  \\t\\t      \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createPatientForm.get('bedId').hasError(validation.type) && (createPatientForm.get('bedId').dirty || createPatientForm.get('bedId').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t</mat-error>\\n\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t<mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t    <input matInput placeholder=\\\"Enter patient age\\\" type=\\\"number\\\" formControlName=\\\"patientAge\\\">\\n\\t\\t\\t\\t \\t  \\t\\t    <mat-icon matSuffix>info</mat-icon>\\n\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t<mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t    <input matInput placeholder=\\\"Enter patient weight\\\" type=\\\"number\\\" formControlName=\\\"patientWeight\\\">\\n\\t\\t\\t\\t \\t  \\t\\t    <mat-icon matSuffix>info</mat-icon>\\n\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t<mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t<mat-select placeholder=\\\"gender\\\" formControlName=\\\"patientGender\\\">\\n\\t\\t\\t\\t \\t  \\t\\t    \\t<mat-option *ngFor=\\\"let patientGender of patientGenders\\\" [value]=\\\"patientGender.value\\\">\\n\\t\\t\\t\\t \\t  \\t\\t      \\t\\t{{patientGender.viewValue}}\\n\\t\\t\\t\\t \\t  \\t\\t    \\t</mat-option>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t</mat-select>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t<mat-icon matSuffix>account_box</mat-icon>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t<mat-error *ngFor=\\\"let validation of validationMessages.patientGender\\\">\\n\\t\\t\\t\\t \\t  \\t\\t      \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"createPatientForm.get('patientGender').hasError(validation.type) && (createPatientForm.get('patientGender').dirty || createPatientForm.get('patientGender').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t</mat-error>\\n\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t<mat-form-field>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t<mat-select placeholder=\\\"Doctor\\\" formControlName=\\\"doctor\\\">\\n\\t\\t\\t\\t \\t  \\t\\t    \\t<mat-option *ngFor=\\\"let doctor of doctors\\\" [value]=\\\"doctor.userName\\\">\\n\\t\\t\\t\\t \\t  \\t\\t      \\t\\t\\t{{doctor.userName}}\\n\\t\\t\\t\\t \\t  \\t\\t    \\t</mat-option>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t</mat-select>\\n\\t\\t\\t\\t \\t  \\t\\t  \\t<mat-icon matSuffix>assignment_ind</mat-icon>\\n\\t\\t\\t\\t \\t  \\t\\t</mat-form-field>\\n\\t\\t\\t\\t \\t\\t</div>\\n\\t\\t\\t\\t \\t\\t<button mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" (click)=\\\"createPatientForm.reset()\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t\\t\\t\\t \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!createPatientForm.valid\\\">Submit</button>\\n\\t\\t\\t\\t \\t</form>\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t\\t<div fxFlex=\\\"25\\\" fxFlex.xs=\\\"50\\\"  fxHide.xs=\\\"true\\\">\\n\\t\\t\\t<mat-card>\\n\\t\\t\\t\\t<mat-card-content class=\\\"form-container\\\">\\n\\t\\t\\t\\t\\t<mat-form-field appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Active/Discharged\\\" [(ngModel)]=\\\"term\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <mat-option *ngFor=\\\"let status of Statuses\\\" [value]=\\\"status.value\\\">\\n\\t\\t\\t\\t\\t\\t\\t      {{status.viewValue}}\\n\\t\\t\\t\\t\\t\\t\\t    </mat-option>\\n\\t\\t\\t\\t\\t\\t\\t  </mat-select>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<mat-form-field appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon matSuffix>search</mat-icon>\\n\\t\\t\\t\\t\\t\\t<input  matInput placeholder=\\\"Search Patient\\\" type=\\\"text\\\"  [(ngModel)]=term>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t</mat-card>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport {MatDialog, MatDialogConfig} from \"@angular/material\";\nimport {FormControl,FormBuilder,FormGroup,Validators,FormGroupDirective} from '@angular/forms';\nimport {NurseService} from '../nurse.service';\nimport { EditpatientDialogComponent } from '../editpatient-dialog/editpatient-dialog.component';\nimport { DischargepatientDialogComponent } from '../dischargepatient-dialog/dischargepatient-dialog.component';\n\n\nexport interface patientGenders {\n  value: string;\n  viewValue: string;\n}\n\nexport interface Statuses {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-nurse-mpatient',\n  templateUrl: './nurse-mpatient.component.html',\n  styleUrls: ['./nurse-mpatient.component.css']\n})\n\n\nexport class NurseMpatientComponent implements OnInit {\n\tcreatePatientForm:FormGroup;\n\tpatientData={};\n\tbeds=[];\n\tdoctors=[];\n\tpatients=[];\n  term;\n\tpatientGenders: patientGenders[] = [\n\t\t{value: 'male', viewValue: 'Male'},\n\t    {value: 'female', viewValue: 'Female'}\n\t  ];\n\n\tStatuses: Statuses[] = [\n\t    {value: 'active', viewValue: 'Active'},\n\t    {value: 'discharged', viewValue: 'Discharged'}\n\t  ];\n  \tconstructor(private fb: FormBuilder,public snackbar: MatSnackBar,private dialog: MatDialog,private nurse: NurseService) { \n  \t\tthis.createPatientForm = this.fb.group({\n  \t\t\tpatientName:['',Validators.required],\n  \t\t\tbedId:['',Validators.required],\n  \t\t\tpatientAge:[''],\n  \t\t\tpatientWeight:[''],\n  \t\t\tpatientGender:['',Validators.required],\n  \t\t\tdoctor:[''],\n\n  \t\t}) \n  \t}\n\n  \tvalidationMessages = {\n  \t\t'patientName':[\n  \t\t\t{type:'required',message:'Patient name is required'}\n  \t\t],\n  \t\t'bedId':[\n  \t\t\t{type:'required',message:'Bed name is required'},\n  \t\t],\n  \t\t'patientGender':[\n  \t\t\t{type:'required',message:'Patient gender is required'}\n  \t\t]\n\n  \t}\n\n  \tngOnInit() {\n  \t\tthis.nurse.readPatient()\n  \t\t\t.subscribe(\n  \t\t\t\tres => {\n  \t\t\t\t    if(res.success){\n  \t\t\t\t        this.patients = res.data;\n  \t\t\t\t    }\n  \t\t        else{\n  \t\t             this.snackbar.open(res.message, 'close')\n  \t\t        }\n  \t\t\t\t},\n  \t\t\t\terr => {\n  \t\t\t\t    console.log(err);\n  \t\t\t\t}\n  \t\t)\n  \t\tthis.nurse.readBed()\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t\t       if(res.success){\n  \t\t\t        this.beds = res.data;\n  \t\t\t        }\n  \t           else{\n  \t             this.snackbar.open(res.message, 'close')\n  \t           }\n  \t\t\t       },\n  \t\t\t   err => {\n  \t\t\t         console.log(err);\n  \t\t\t   }\n\n  \t\t)\n\n  \t\tthis.nurse.readDoctor()\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t\t\t\tif(res.success){\n  \t\t\t\t\t      this.doctors = res.data;\n  \t\t\t\t\t}\n  \t\t\t        \n  \t\t\t\t\t},\n  \t\t\t\t\t err => {\n  \t\t\t\t\t       console.log(err);\n  \t\t\t\t\t }\n\n  \t\t)\n\n\n  \t}\n\n  \tonSubmit(formData: any, formDirective: FormGroupDirective): void {\n  \t  \t\tthis.patientData = this.createPatientForm.value;\n  \t  \t\tthis.nurse.createPatient(this.patientData)\n  \t  \t\t.subscribe(\n  \t  \t\t\tres => {\n  \t  \t\t        if(res.success){\n  \t  \t\t            this.snackbar.open(res.message, 'close')\n  \t  \t\t            \tthis.nurse.readBed()\n  \t  \t\t            \t.subscribe(\n  \t  \t\t            \t\tres => {\n  \t  \t\t            \t\t       if(res.success){\n  \t  \t\t            \t\t        this.beds = res.data;\n  \t  \t\t            \t\t        }\n  \t  \t\t                       else{\n  \t  \t\t                         this.snackbar.open(res.message, 'close')\n  \t  \t\t                       }\n  \t  \t\t            \t\t       },\n  \t  \t\t            \t\t   err => {\n  \t  \t\t            \t\t         console.log(err);\n  \t  \t\t            \t\t   }\n\n  \t  \t\t            \t)\n  \t  \t\t            \tthis.nurse.readPatient()\n  \t  \t\t            \t\t.subscribe(\n  \t  \t\t            \t\t\tres => {\n  \t  \t\t            \t\t\t    if(res.success){\n  \t  \t\t            \t\t\t        this.patients = res.data;\n  \t  \t\t            \t\t\t    }\n  \t  \t\t            \t        else{\n  \t  \t\t            \t             this.snackbar.open(res.message, 'close')\n  \t  \t\t            \t        }\n  \t  \t\t            \t\t\t},\n  \t  \t\t            \t\t\terr => {\n  \t  \t\t            \t\t\t    console.log(err);\n  \t  \t\t            \t\t\t}\n  \t  \t\t            \t)\n  \t  \t\t            formDirective.resetForm();\n  \t  \t\t            this.createPatientForm.reset();\n  \t  \t\t        \t}\n  \t  \t\t        },\n  \t  \t\t    err => {\n  \t  \t\t          console.log(err);\n  \t  \t\t    }\n\n  \t  \t\t)\n  \t  \t   \n  \t  \t}\n\n  \topenEditDialog(patient) {\n  \t        const dialogConfig = new MatDialogConfig();\n  \t        dialogConfig.autoFocus = true;\n  \t        dialogConfig.height= '400px';\n  \t        dialogConfig.width='700px';\n  \t        dialogConfig.data = {\n  \t                _id: patient._id,\n  \t                patientName:patient.patientName,\n  \t                bedId:patient._bed,\n  \t                bedName:patient.bedName,\n  \t                patientAge:patient.patientAge,\n  \t                patientWeight:patient.patientWeight,\n  \t                patientGender:patient.patientGender,\n  \t                doctor:patient.doctor\n  \t            };\n\n  \t        let dialogRef = this.dialog.open(EditpatientDialogComponent, dialogConfig);\n  \t        dialogRef.afterClosed().subscribe(result => {\n  \t          if(result == 'success'){\n  \t          \tthis.nurse.readPatient()\n  \t          \t\t.subscribe(\n  \t          \t\t\tres => {\n  \t          \t\t\t    if(res.success){\n  \t          \t\t\t        this.patients = res.data;\n  \t          \t\t\t    }\n  \t          \t        else{\n  \t          \t             this.snackbar.open(res.message, 'close')\n  \t          \t        }\n  \t          \t\t\t},\n  \t          \t\t\terr => {\n  \t          \t\t\t    console.log(err);\n  \t          \t\t\t}\n  \t          \t)\n  \t          }\n  \t        });\n  \t}\n\n\n  \t\topenDischargeDialog(patient) {\n  \t\t    const dialogConfig = new MatDialogConfig();\n  \t\t    dialogConfig.autoFocus = true;\n  \t\t    dialogConfig.height= '200px';\n  \t\t    dialogConfig.width='400px';\n  \t\t    dialogConfig.data = {\n  \t\t       _id: patient._id,\n  \t\t       \tpatientName:patient.patientName,\n  \t\t       \tbedId:patient._bed,\n  \t\t       \tbedName:patient.bedName,\n  \t\t    };\n  \t\t    let dialogRef = this.dialog.open(DischargepatientDialogComponent, dialogConfig);\n  \t\t    dialogRef.afterClosed().subscribe(result => {\n  \t\t      if(result == 'success'){\n  \t\t      \tthis.nurse.readPatient()\n  \t\t      \t\t.subscribe(\n  \t\t      \t\t\tres => {\n  \t\t      \t\t\t    if(res.success){\n  \t\t      \t\t\t        this.patients = res.data;\n  \t\t      \t\t\t    }\n  \t\t      \t        else{\n  \t\t      \t             this.snackbar.open(res.message, 'close')\n  \t\t      \t        }\n  \t\t      \t\t\t},\n  \t\t      \t\t\terr => {\n  \t\t      \t\t\t    console.log(err);\n  \t\t      \t\t\t}\n  \t\t      \t)\n  \t\t      }\n  \t\t    });\n  \t\t        \n  \t\t }\n\n\n\n}\n","module.exports = \"table {\\n    border-collapse: collapse;\\n    width: 100%;\\n    border-radius: 3px;\\n    background: #fcfcfc;\\n    overflow: hidden;\\nbox-shadow: 0px 0px 3px 1px rgba(181,181,181,1);\\n}\\n\\nth, td {\\n    text-align: left;\\n    padding: 8px;\\n    border: 1px solid #efefef;\\n}\\n\\ntr:nth-child(even){background-color: #f2f2f2}\\n\\nth {\\n    background-color: #999;\\n    color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbnVyc2UtcGhpc3RvcnkvbnVyc2UtcGhpc3RvcnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDBCQUEwQjtJQUMxQixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLG9CQUFvQjtJQUNwQixpQkFBaUI7QUFHckIsZ0RBQWdEO0NBQy9DOztBQUVEO0lBQ0ksaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYiwwQkFBMEI7Q0FDN0I7O0FBRUQsbUJBQW1CLHlCQUF5QixDQUFDOztBQUU3QztJQUNJLHVCQUF1QjtJQUN2QixhQUFhO0NBQ2hCIiwiZmlsZSI6InNyYy9hcHAvbnVyc2UtcGhpc3RvcnkvbnVyc2UtcGhpc3RvcnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBiYWNrZ3JvdW5kOiAjZmNmY2ZjO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMHB4IDNweCAxcHggcmdiYSgxODEsMTgxLDE4MSwxKTtcbi1tb3otYm94LXNoYWRvdzogMHB4IDBweCAzcHggMXB4IHJnYmEoMTgxLDE4MSwxODEsMSk7XG5ib3gtc2hhZG93OiAwcHggMHB4IDNweCAxcHggcmdiYSgxODEsMTgxLDE4MSwxKTtcbn1cblxudGgsIHRkIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIHBhZGRpbmc6IDhweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZWZlZmVmO1xufVxuXG50cjpudGgtY2hpbGQoZXZlbil7YmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMn1cblxudGgge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM5OTk7XG4gICAgY29sb3I6IHdoaXRlO1xufSJdfQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" style=\\\"width:100%;height: 100%;\\\" fxLayoutGap=\\\"10px\\\">\\n\\t<div fxFlex=\\\"none\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n\\t\\t<mat-accordion>\\n\\t\\t  <mat-expansion-panel>\\n\\t\\t    <mat-expansion-panel-header>\\n\\t\\t      <mat-panel-title>\\n\\t\\t        Personal Details\\n\\t\\t      </mat-panel-title>\\n\\t\\t      <mat-panel-description>\\n\\t\\t      \\tof {{history.patientName}}\\n\\t\\t      </mat-panel-description>\\n\\t\\t    </mat-expansion-panel-header>\\n\\t\\t\\t\\t<div fxLayout=\\\"column\\\">\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"50\\\" fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"33\\\">Age : {{history.patientAge}}</div>\\n\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"33\\\">weight : {{history.patientWeight}} Kg</div>\\n\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"33\\\">Gender : {{history.patientGender}}</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"50\\\" fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"33\\\">Status : {{history.patientStatus}}</div>\\n\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"33\\\">Admitted On : {{history.admittedOn | date:'fullDate'}}</div>\\n\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"33\\\">Discharged On : {{history.dischargedOn}}</div>\\n\\t\\t\\t\\t\\t</div>\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t  </mat-expansion-panel>\\n\\t\\t</mat-accordion>\\n\\t</div>\\n\\n\\n\\n\\t<div fxFlex=\\\"none\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n\\t\\t<mat-accordion>\\n\\t\\t  <mat-expansion-panel *ngFor=\\\"let medication of history._medication\\\">\\n\\t\\t    <mat-expansion-panel-header>\\n\\t\\t      <mat-panel-title>\\n\\t\\t        Infusion\\n\\t\\t      </mat-panel-title>\\n\\t\\t      <mat-panel-description>\\n\\t\\t        at {{medication._infusionhistory.infusionDate | date:'fullDate'}} on {{medication._infusionhistory.startingTime}}\\n\\t\\t      </mat-panel-description>\\n\\t\\t    </mat-expansion-panel-header>\\n\\n\\t\\t\\t<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" style=\\\"width:100%;height: 100%;\\\">\\n\\t\\t\\t\\t<div fxFlex=\\\"5\\\" fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"20\\\">Medicine : {{medication.medicineName}} </div>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"20\\\">Volume : {{medication.medicineVolume}} ml</div>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"20\\\">Rate : {{medication.medicineRate}} ml/hr</div>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"20\\\">Infused Volume : {{medication._infusionhistory.infusedVolume}} ml</div>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"20\\\">Ending Time : {{medication._infusionhistory.endingTime}} </div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div id=\\\"printArea\\\">\\n\\t\\t\\t\\t    <table style=\\\"width:100%\\\">\\n\\t\\t\\t\\t          <tr>\\n\\t\\t\\t\\t            <th>Status</th>\\n\\t\\t\\t\\t            <th>Time</th> \\n\\t\\t\\t\\t          </tr>\\n\\t\\t\\t\\t          <tr *ngFor=\\\"let msg of medication._infusionhistory.message\\\">\\n\\t\\t\\t\\t            <td >{{msg.status}}</td>\\n\\t\\t\\t\\t            <td>{{msg.time}}</td>\\n\\t\\t\\t\\t          </tr>\\n\\t\\t\\t\\t    </table>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\n\\t\\t  </mat-expansion-panel>\\n\\t\\t</mat-accordion>\\n\\t</div>\\n\\t<div fxFlex=\\\"5\\\">\\n\\t\\t<button mat-raised-button color=\\\"accent\\\" style=\\\"margin-left: 10px;\\\" [routerLink]=\\\"['/nurse/managepatients']\\\">Back</button>\\n\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { switchMap } from 'rxjs/operators';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport {NurseService} from '../nurse.service';\nimport { MatSnackBar } from '@angular/material';\n\n\n\n\n@Component({\n  selector: 'app-nurse-phistory',\n  templateUrl: './nurse-phistory.component.html',\n  styleUrls: ['./nurse-phistory.component.css']\n})\nexport class NursePhistoryComponent implements OnInit {\n\thistory: Array<any>=[];\n  constructor(private route: ActivatedRoute,public snackbar: MatSnackBar,\n  private router: Router,private nurse: NurseService) { }\n\n  ngOnInit() {\n  \tlet id = this.route.snapshot.paramMap.get('id');\n  \tthis.nurse.readPatientHistory(id)\n  \t  .subscribe(\n  \t    res => {\n  \t        if(res.success){\n  \t        \tthis.history = res.data;\n  \t        \tconsole.log(this.history);\n  \t        }\n  \t        else{\n  \t        \tthis.snackbar.open(res.message, 'close')\n  \t        }\n  \t    },\n  \t    err => {\n  \t        console.log(err);\n  \t    }\n  \t)\n\n  \t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpParams} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NurseService {\n\tprivate getStationsUrl = 'http://173.230.145.245:4000/api/nurse/station'\n\tprivate setStationUrl = 'http://173.230.145.245:4000/api/nurse/setstation'\n\tprivate getBedsUrl = 'http://173.230.145.245:4000/api/nurse/bed'\n\tprivate getDoctorsUrl = 'http://173.230.145.245:4000/api/nurse/doctor'\n\tprivate managePatientUrl = 'http://173.230.145.245:4000/api/nurse/patient'\n\tprivate getOccupiedBedsUrl = 'http://173.230.145.245:4000/api/nurse/occupiedbed'\n\tprivate manageTaskUrl = 'http://173.230.145.245:4000/api/nurse/task'\n\tprivate getUpcomingTaskUrl = 'http://173.230.145.245:4000/api/nurse/upcomingtask'\n\tprivate getDelayedTaskUrl = 'http://173.230.145.245:4000/api/nurse/delayedtask'\n\tprivate getActiveTaskUrl = 'http://173.230.145.245:4000/api/nurse/activetask'\n\tprivate getPhistoryUrl = 'http://173.230.145.245:4000/api/nurse/patienthistory'\n\n\n\tconstructor(private http:HttpClient,private router:Router) { }\n\treadStation(){\n\t  return this.http.get<any>(this.getStationsUrl)\n\t}\n\tsetStation(stationData){\n\t\treturn this.http.post<any>(this.setStationUrl,stationData)\n\t}\n\treadBed(){\n\t  return this.http.get<any>(this.getBedsUrl)\n\t}\n\treadDoctor(){\n\t  return this.http.get<any>(this.getDoctorsUrl)\n\t}\n\tcreatePatient(patientData){\n\t\treturn this.http.post<any>(this.managePatientUrl,patientData)\n\t}\n\treadPatient(){\n\t  return this.http.get<any>(this.managePatientUrl)\n\t}\n\tupdatePatient(editPatientData){\n\t\treturn this.http.put<any>(this.managePatientUrl,editPatientData)\n\t}\n\n\tdischargePatient(dischargePatientData){\n\t  let params = new HttpParams();\n\t  params = params.append(\"_id\", dischargePatientData._id);\n\t  return this.http.delete<any>(this.managePatientUrl,{params: params})\n\t}\n\treadOccupiedBed(){\n\t  return this.http.get<any>(this.getOccupiedBedsUrl)\n\t}\n\n\tcreateTask(taskData){\n\t\treturn this.http.post<any>(this.manageTaskUrl,taskData)\n\t}\n\treadUpcomingTask(){\n\t\treturn this.http.get<any>(this.getUpcomingTaskUrl)\n\t}\n\treadDelayedTask(){\n\t\treturn this.http.get<any>(this.getDelayedTaskUrl)\n\t}\n\treadActiveTask(){\n\t\treturn this.http.get<any>(this.getActiveTaskUrl)\n\t}\n\tdeleteTask(deleteTaskData){\n\t  let params = new HttpParams();\n\t  params = params.append(\"_id\", deleteTaskData._id);\n\t  return this.http.delete<any>(this.manageTaskUrl,{params: params})\n\t}\n\treadPatientHistory(id){\n\t  let params = new HttpParams();\n\t  params = params.append(\"_id\", id);\n\t  return this.http.get<any>(this.getPhistoryUrl,{params: params})\n\t}\n\n}\n","module.exports = \".registerForm-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.register-card {\\n  max-width: 500px;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCx1QkFBdUI7Q0FDeEI7O0FBRUQ7RUFDRSxpQkFBaUI7RUFDakIsb0JBQW9CO0NBQ3JCIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZWdpc3RlckZvcm0tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnJlZ2lzdGVyLWNhcmQge1xuICBtYXgtd2lkdGg6IDUwMHB4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufSJdfQ== */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" [ngStyle]=\\\"{background: 'url(../../assets/images/bg.jpg)'}\\\"  style=\\\"height: 100%;width: 100%\\\">\\n<mat-card class=\\\"register-card\\\" fxFlex=\\\"40\\\" fxFlex.xs=\\\"80\\\">\\n    <mat-card-header>\\n        <mat-card-title>Register</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"registerForm-container\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Enter your email\\\"  type=\\\"text\\\" formControlName=\\\"userName\\\">\\n                    <mat-icon matSuffix>email</mat-icon>\\n                    <mat-error *ngFor=\\\"let validation of validationMessages.userName\\\">\\n                           <mat-error class=\\\"error-message\\\" *ngIf=\\\"registerForm.get('userName').hasError(validation.type) && (registerForm.get('userName').dirty || registerForm.get('userName').touched)\\\">{{validation.message}}</mat-error>\\n                    </mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Enter Hospital name\\\" type=\\\"text\\\" formControlName=\\\"hospitalName\\\">\\n                    <mat-icon matSuffix>local_hospital</mat-icon>\\n                    <mat-error *ngFor=\\\"let validation of validationMessages.hospitalName\\\">\\n                           <mat-error class=\\\"error-message\\\" *ngIf=\\\"registerForm.get('hospitalName').hasError(validation.type) && (registerForm.get('hospitalName').dirty || registerForm.get('hospitalName').touched)\\\">{{validation.message}}</mat-error>\\n                    </mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Enter password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\n                    <mat-icon matSuffix>vpn_key</mat-icon>\\n                    <mat-error *ngFor=\\\"let validation of validationMessages.password\\\">\\n                           <mat-error class=\\\"error-message\\\" *ngIf=\\\"registerForm.get('password').hasError(validation.type) && (registerForm.get('password').dirty || registerForm.get('password').touched)\\\">{{validation.message}}</mat-error>\\n                    </mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Repeat password\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\">\\n                    <mat-icon matSuffix>vpn_key</mat-icon>\\n                    <mat-error class=\\\"error-message\\\" *ngIf=\\\"registerForm.controls.confirmPassword.invalid\\\">Password missmatch</mat-error>\\n                </mat-form-field>\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\">Register</button>\\n            </form>\\n    </mat-card-content>\\n    <mat-card-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"height: 100%;width: 100%\\\">\\n        <button mat-button color=\\\"accent\\\" routerLink=\\\"/login\\\">Login</button>\\n    </mat-card-actions>\\n</mat-card>\\n</div>\"","  import { Component, OnInit } from '@angular/core';\n  import {FormControl,FormBuilder,FormGroup,Validators} from '@angular/forms';\n  import {AuthService} from '../auth.service';\n  import {passValidator} from '../validator';\n  import { MatSnackBar } from '@angular/material';\n\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n    registerForm:FormGroup;\n    userData = {};\n  \tconstructor(private fb: FormBuilder,private auth: AuthService,public snackbar: MatSnackBar) {\n        this.registerForm = this.fb.group({\n        userName:['',Validators.compose([Validators.required,Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])],\n        hospitalName:['',Validators.required],\n        password:['',Validators.compose([Validators.required,Validators.minLength(5)])],\n        confirmPassword:['',passValidator]\n        })\n    //Observable to update validator if password field changed again\n    this.registerForm.controls.password.valueChanges\n        .subscribe(x => this.registerForm.controls.confirmPassword.updateValueAndValidity())\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit() {\n      this.userData = this.registerForm.value;\n      this.auth.registerUser(this.userData)\n      \t.subscribe(\n      \t\tres => {\n                  if(res.success){\n                    this.snackbar.open(res.message, 'close')\n                  }\n              },\n            err => {\n                console.log(err);\n            }\n\n      \t)\n    }\n\n\n    validationMessages = {\n  \t    'userName': [\n      \t    { type: 'required', message: 'Username is required' },\n      \t    { type: 'validUsername', message: 'Your username has already been taken' },\n      \t    { type: 'pattern', message: 'Enter a valid email' }\n    \t],\n    \t'hospitalName': [\n      \t    { type: 'required', message: 'Hospital name is required' },\n    \t],\n    \t'password': [\n      \t    { type: 'required', message: 'Password is required' },\n      \t    { type: 'minlength', message: 'Password must be at least 5 characters long' },\n    \t]\n    }\n}\n","module.exports = \".resetForm-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.reset-card {\\n  max-width: 500px;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCx1QkFBdUI7Q0FDeEI7O0FBRUQ7RUFDRSxpQkFBaUI7RUFDakIsb0JBQW9CO0NBQ3JCIiwiZmlsZSI6InNyYy9hcHAvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZXNldEZvcm0tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnJlc2V0LWNhcmQge1xuICBtYXgtd2lkdGg6IDUwMHB4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufSJdfQ== */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" [ngStyle]=\\\"{background: 'url(../../assets/images/bg.jpg)'}\\\"  style=\\\"height: 100%;width: 100%\\\">\\n    <mat-card fxFlex=\\\"40\\\" fxFlex.xs=\\\"80\\\">\\n        <mat-card-header>\\n            <mat-card-title>Reset Password</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n             <form [formGroup]=\\\"resetForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"resetForm-container\\\">\\n                 <mat-form-field>\\n                     <input matInput placeholder=\\\"Enter password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\n                     <mat-icon matSuffix>vpn_key</mat-icon>\\n                     <mat-error *ngFor=\\\"let validation of validationMessages.password\\\">\\n                            <mat-error class=\\\"error-message\\\" *ngIf=\\\"resetForm.get('password').hasError(validation.type) && (resetForm.get('password').dirty || resetForm.get('password').touched)\\\">{{validation.message}}</mat-error>\\n                     </mat-error>\\n                 </mat-form-field>\\n                 <mat-form-field>\\n                     <input matInput placeholder=\\\"Repeat password\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\">\\n                     <mat-icon matSuffix>vpn_key</mat-icon>\\n                     <mat-error class=\\\"error-message\\\" *ngIf=\\\"resetForm.controls.confirmPassword.invalid\\\">Password missmatch</mat-error>\\n                 </mat-form-field>\\n                 <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!resetForm.valid\\\">reset</button>\\n             </form>   \\n        </mat-card-content>\\n        <mat-card-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"height: 100%;width: 100%\\\">\\n            <button mat-button color=\\\"accent\\\" routerLink=\\\"/login\\\">Login</button>\\n        </mat-card-actions>\\n    </mat-card>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport  { AuthService} from '../auth.service';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport {FormControl,FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport {passValidator} from '../validator';\n\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\tresetForm:FormGroup;\n\tresetData = {'userName':''};\n\tuserName;\n  constructor(private fb: FormBuilder,private authService:AuthService,private route: ActivatedRoute,public snackbar: MatSnackBar,\n  private router: Router) { \n  \tthis.resetForm = this.fb.group({\n  \tpassword:['',Validators.compose([Validators.required,Validators.minLength(5)])],\n  \tconfirmPassword:['',passValidator]\n  \t})\n  }\n\n  ngOnInit() {\n  \tlet token = this.route.snapshot.paramMap.get('token');\n  \tthis.authService.checkResetPasswordLink(token)\n  \t  \t.subscribe(\n  \t    \tres => {\n  \t        \tif(res.success){\n  \t        \t\tconsole.log(res.data.userName);\n  \t        \t\tthis.userName = res.data.userName;\n  \t        \t\tthis.snackbar.open(res.message, 'close')\n  \t        \t}\n  \t        \telse{\n  \t        \t\tthis.snackbar.open(res.message, 'close')\n  \t        \t\tthis.router.navigate(['/login'])\n  \t        }\n  \t    },\n  \t    err => {\n  \t        console.log(err);\n  \t    }\n  \t\t)\n  \t}\n  \tonSubmit() {\n  \t  this.resetData = this.resetForm.value;\n  \t this.resetData.userName = this.userName;\n  \t  console.log(this.resetData);\n  \t  this.authService.resetPassword(this.resetData)\n  \t  \t.subscribe(\n  \t  \t\tres => {\n  \t              if(res.success){\n  \t                this.snackbar.open(res.message, 'close')\n  \t              }\n  \t          },\n  \t        err => {\n  \t            console.log(err);\n  \t        }\n\n  \t  \t)\n  \t}\n\n\n\n\n    validationMessages = {\n    \t'password': [\n      \t    { type: 'required', message: 'Password is required' },\n      \t    { type: 'minlength', message: 'Password must be at least 5 characters long' },\n    \t]\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot} from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuardService implements CanActivate {\n\n  constructor(public authService: AuthService, public router: Router) { }\n  public jwtHelper = new JwtHelperService();\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n     // this will be passed from the route config\n     // on the data property\n     const expectedRole = route.data.expectedRole;\n     const token = localStorage.getItem('token');\n     // decode the token to get its payload\n     const decodedToken = this.jwtHelper.decodeToken(token);\n    if(this.authService.loggedIn() && decodedToken.permission == expectedRole){\n    \treturn true;\n    }\n    else{\n    \tthis.router.navigate(['/unauthorized']);\n    \treturn false;\n    }\n   }\n\n}\n","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VsZWN0LXN0YXRpb24vc2VsZWN0LXN0YXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCx1QkFBdUI7Q0FDeEIiLCJmaWxlIjoic3JjL2FwcC9zZWxlY3Qtc3RhdGlvbi9zZWxlY3Qtc3RhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn0iXX0= */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" [ngStyle]=\\\"{background: 'url(../../assets/images/bg.jpg)'}\\\"  style=\\\"height: 100%;width: 100%\\\">\\n\\t<mat-card fxFlex=\\\"40\\\" fxFlex.xs=\\\"80\\\">\\n\\t\\t\\t<mat-card-header>\\n\\t\\t\\t  \\t<mat-card-title>Select Station</mat-card-title>\\n\\t\\t\\t</mat-card-header>\\n\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t\\t<form [formGroup]=\\\"selectStationForm\\\" (ngSubmit)=\\\"onSubmit(selectStationForm,formDirective)\\\"  #formDirective=\\\"ngForm\\\">\\n\\t\\t\\t\\t \\t\\t<div class=\\\"form-container\\\">\\n\\t\\t\\t\\t \\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t \\t\\t\\t  \\t<mat-select placeholder=\\\"Station\\\" formControlName=\\\"stationId\\\">\\n\\t\\t\\t\\t \\t\\t\\t    \\t<mat-option *ngFor=\\\"let station of stations\\\" [value]=\\\"station._id\\\">\\n\\t\\t\\t\\t \\t\\t\\t      \\t\\t{{station.stationName}}\\n\\t\\t\\t\\t \\t\\t\\t    \\t</mat-option>\\n\\t\\t\\t\\t \\t\\t\\t  \\t</mat-select>\\n\\t\\t\\t\\t \\t\\t\\t  \\t<mat-icon matSuffix>important_devices</mat-icon>\\n\\t\\t\\t\\t \\t\\t\\t  \\t<mat-error *ngFor=\\\"let validation of validationMessages.stationId\\\">\\n\\t\\t\\t\\t \\t\\t\\t      \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"selectStationForm.get('stationId').hasError(validation.type) && (selectStationForm.get('stationId').dirty || selectStationForm.get('stationId').touched)\\\">{{validation.message}}</mat-error>\\n\\t\\t\\t\\t \\t\\t\\t  \\t</mat-error>\\n\\t\\t\\t\\t \\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t \\t\\t</div>\\n\\t\\t\\t\\t \\t\\t<div fxLayout=\\\"row\\\">\\n\\t\\t\\t\\t \\t\\t\\t<button fxFlex=\\\"50\\\" mat-raised-button color=\\\"accent\\\"  type=\\\"reset\\\" (click)=\\\"selectStationForm.reset()\\\" style=\\\"margin-right: 20px;\\\">cancel</button>\\n\\t\\t\\t\\t \\t\\t\\t<button fxFlex=\\\"50\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!selectStationForm.valid\\\">Submit</button>\\n\\t\\t\\t\\t \\t\\t</div>\\n\\t\\t\\t\\t \\t</form>\\n\\t\\t\\t</mat-card-content>\\n\\t\\t</mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl,FormBuilder,FormGroup,Validators,FormGroupDirective} from '@angular/forms';\nimport {AdminService} from '../admin.service';\nimport {NurseService} from '../nurse.service';\nimport { MatSnackBar } from '@angular/material';\nimport {MatDialog, MatDialogConfig} from \"@angular/material\";\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-select-station',\n  templateUrl: './select-station.component.html',\n  styleUrls: ['./select-station.component.css']\n})\nexport class SelectStationComponent implements OnInit {\n\tselectStationForm:FormGroup;\n\tstations=[];\n\tstationData={};\n  \tconstructor(private router:Router,private fb: FormBuilder,private nurse: NurseService,private admin: AdminService,public snackbar: MatSnackBar,private dialog: MatDialog) { \n  \t\tthis.selectStationForm = this.fb.group({\n  \t\t\tstationId:['',Validators.required]\n  \t\t}) \n  \t}\n\n  \tvalidationMessages = {\n  \t\t'stationId':[\n  \t\t\t{type:'required',message:'Station name is required'}\n  \t\t]\n  \t}\n  \tngOnInit() {\n  \t\tthis.nurse.readStation()\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t        \tthis.stations = res.data;\n  \t\t        \t}\n  \t\t        else{\n  \t\t          this.snackbar.open(res.message, 'close')\n  \t\t        }\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t}\n\n\n   onSubmit(formData: any, formDirective: FormGroupDirective): void {\n  \t\tthis.stationData = this.selectStationForm.value;\n  \t\tthis.nurse.setStation(this.stationData)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t        if(res.success){\n  \t\t            localStorage.setItem('token',res.token)\n  \t\t            this.router.navigate(['/nurse/home'])\n  \t\t            formDirective.resetForm();\n  \t\t            this.selectStationForm.reset();\n  \t\t        \t}\n  \t\t        },\n  \t\t    err => {\n  \t\t          console.log(err);\n  \t\t    }\n\n  \t\t)\n  \t\t\n  \t   \n  \t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\tprivate socket: SocketIOClient.Socket;\n  \tconstructor() {\n  \t\tthis.socket = io('http://173.230.145.245:4000');\n\n  \t}\n\n  \t// EMITTER\n  \t  sendMessage(topic:string,msg: string) {\n  \t    this.socket.emit('publish', {topic:topic ,message: msg});\n  \t  }\n\n  \t  // HANDLER\n  \t  onMessage() {\n  \t    return Observable.create(observer => {\n  \t      this.socket.on('dripo', msg => {\n  \t        observer.next(msg);\n  \t      });\n  \t    });\n  \t  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2thY3Rpdml0eS1kaWFsb2cvdGFza2FjdGl2aXR5LWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h2 mat-dialog-title>Delete Task</h2>\\n\\n<mat-dialog-content>\\n\\n\\tAre you sure you want to delete this task ?\\n \\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n    <button class=\\\"mat-raised-button mat-primary\\\" color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Close</button>\\n    <button class=\\\"mat-raised-button mat-accent\\\"(click)=\\\"removeTask()\\\">Remove</button>\\n</mat-dialog-actions>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {NurseService} from '../nurse.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-taskactivity-dialog',\n  templateUrl: './taskactivity-dialog.component.html',\n  styleUrls: ['./taskactivity-dialog.component.css']\n})\nexport class TaskactivityDialogComponent implements OnInit {\n\tdeleteTaskData={};\n  \tconstructor(private nurse: NurseService,public snackbar: MatSnackBar,\n        private dialogRef: MatDialogRef<TaskactivityDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) data) { \n  \t\tthis.deleteTaskData = data;\n  \t}\n\n  \tngOnInit() {\n  \t}\n\n  \tremoveTask(){\n  \t\tthis.nurse.deleteTask(this.deleteTaskData)\n  \t\t\t.subscribe(\n  \t\t\t\tres => {\n  \t\t\t        if(res.success){\n  \t\t\t            this.snackbar.open(res.message, 'close')\n  \t\t\t            this.dialogRef.close('success');\n  \t\t\t        \t}\n  \t\t\t        },\n  \t\t\t    err => {\n  \t\t\t          console.log(err);\n  \t\t\t    }\n\n  \t\t\t)\n\n  \t}\n\n}\n","import {Injectable, Injector} from '@angular/core';\nimport { HttpInterceptor,HttpErrorResponse } from '@angular/common/http';\nimport {AuthService} from './auth.service';\nimport {catchError} from \"rxjs/internal/operators\";\nimport {Observable, of} from 'rxjs';\nimport { MatSnackBar } from '@angular/material';\n\n\n\n\n@Injectable()\nexport class TokenInterceptorService implements HttpInterceptor {\n\n    constructor(private injector: Injector,public snackbar: MatSnackBar) { }\n\n   intercept(req,next){\n   \tlet authService = this.injector.get(AuthService);\n   \tlet tokenizedReq = req.clone({\n   \t\tsetHeaders: {\n   \t\t\tAuthorization:`Bearer ${authService.getToken()}`\n   \t\t}\n   \t})\n   \treturn next.handle(tokenizedReq).pipe(catchError((err, caught) => {\n        //intercept the respons error and displace it to the console\n        this.handleAuthError(err);\n        return of(err);\n      }) as any);\n   }\n\n\n\n   private handleAuthError(err: HttpErrorResponse): Observable<any> {\n       //handle your auth error or rethrow\n       if (err.status === 422 || err.status === 404 ) {\n         //navigate /delete cookies or whatever\n        if(err.error.message){\n            this.snackbar.open(err.error.message, 'close')\n         }\n         else if (err.error.errors){\n            this.snackbar.open(err.error.errors[0].msg, 'close')\n         }\n         // if you've caught / handled the error, you don't want to rethrow it unless you also want downstream consumers to have to handle it as well.\n         return of(err.message);\n       }\n       throw err;\n     }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VuYXV0aG9yaXplZC91bmF1dGhvcml6ZWQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" [ngStyle]=\\\"{background: 'url(../../assets/images/noaccess.jpg)'}\\\"  style=\\\"height: 100%;width: 100%\\\">\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-unauthorized',\n  templateUrl: './unauthorized.component.html',\n  styleUrls: ['./unauthorized.component.css']\n})\nexport class UnauthorizedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { AbstractControl, FormGroup } from '@angular/forms';\n\n\nexport function passValidator(control: AbstractControl) {\n    if (control && (control.value !== null || control.value !== undefined)) {\n        const cnfpassValue = control.value;\n\n        const passControl = control.root.get('password'); // magic is this\n        if (passControl) {\n            const passValue = passControl.value;\n            if (passValue !== cnfpassValue || passValue === '') {\n                return {\n                    isError: true\n                };\n            }\n        }\n    }\n\n    return null;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}